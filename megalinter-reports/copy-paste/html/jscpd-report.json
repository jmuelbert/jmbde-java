{
  "statistics": {
    "detectionDate": "2024-09-24T08:36:46.821Z",
    "formats": {
      "java": {
        "sources": {
          "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/ViewerITSuite.java": {
            "lines": 38,
            "tokens": 249,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 86,
            "percentage": 39.47,
            "percentageTokens": 34.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeViewerTopComponentIT.java": {
            "lines": 111,
            "tokens": 603,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 77,
            "percentage": 9.01,
            "percentageTokens": 12.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeRootRefreshActionListenerIT.java": {
            "lines": 49,
            "tokens": 252,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 80,
            "percentage": 30.61,
            "percentageTokens": 31.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeRootNodeIT.java": {
            "lines": 50,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeChildFactoryIT.java": {
            "lines": 90,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EmployeeNewActionListenerIT.java": {
            "lines": 48,
            "tokens": 251,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 80,
            "percentage": 31.25,
            "percentageTokens": 31.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponentIT.java": {
            "lines": 111,
            "tokens": 602,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 77,
            "percentage": 9.01,
            "percentageTokens": 12.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EditorITSuite.java": {
            "lines": 35,
            "tokens": 215,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 86,
            "percentage": 42.86,
            "percentageTokens": 40,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/branding/demo/src/test/java/com/example/demo/DemoApplicationTests.java": {
            "lines": 10,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/branding/demo/src/main/java/com/example/demo/DemoApplication.java": {
            "lines": 11,
            "tokens": 81,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 162,
            "percentage": 200,
            "percentageTokens": 200,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/demo/src/test/java/com/example/demo/DemoApplicationTests.java": {
            "lines": 10,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/demo/src/main/java/com/example/demo/DemoApplication.java": {
            "lines": 11,
            "tokens": 81,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 81,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/demo/src/test/java/com/example/demo/DemoApplicationTests.java": {
            "lines": 10,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/demo/src/main/java/com/example/demo/DemoApplication.java": {
            "lines": 11,
            "tokens": 81,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 81,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/src/de/jmuelbert/jmbde/employee/viewer/EmployeeViewerTopComponent.java": {
            "lines": 157,
            "tokens": 889,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/src/de/jmuelbert/jmbde/employee/viewer/EmployeeRootRefreshActionListener.java": {
            "lines": 53,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/src/de/jmuelbert/jmbde/employee/viewer/EmployeeRootNode.java": {
            "lines": 63,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/src/de/jmuelbert/jmbde/employee/viewer/EmployeeChildFactory.java": {
            "lines": 102,
            "tokens": 368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeePrintActionListener.java": {
            "lines": 63,
            "tokens": 244,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 267,
            "percentage": 82.54,
            "percentageTokens": 109.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeePrint.java": {
            "lines": 91,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeNewActionListener.java": {
            "lines": 63,
            "tokens": 268,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 105,
            "percentage": 34.92,
            "percentageTokens": 39.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeExportActionListener.java": {
            "lines": 60,
            "tokens": 207,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 69,
            "percentage": 13.33,
            "percentageTokens": 33.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java": {
            "lines": 977,
            "tokens": 7740,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 82,
            "duplicatedTokens": 703,
            "percentage": 8.39,
            "percentageTokens": 9.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeDeleteActionListener.java": {
            "lines": 59,
            "tokens": 212,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 93,
            "percentage": 37.29,
            "percentageTokens": 43.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/src/de/jmuelbert/jmbde/options/package-info.java": {
            "lines": 16,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/src/de/jmuelbert/jmbde/options/DatabasePanel.java": {
            "lines": 144,
            "tokens": 982,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 75,
            "percentage": 5.56,
            "percentageTokens": 7.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/src/de/jmuelbert/jmbde/options/DatabaseOptionsPanelController.java": {
            "lines": 93,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java": {
            "lines": 142,
            "tokens": 1083,
            "sources": 1,
            "clones": 62,
            "duplicatedLines": 1024,
            "duplicatedTokens": 7845,
            "percentage": 721.13,
            "percentageTokens": 724.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java": {
            "lines": 142,
            "tokens": 1076,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 125,
            "duplicatedTokens": 807,
            "percentage": 88.03,
            "percentageTokens": 75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java": {
            "lines": 120,
            "tokens": 837,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 245,
            "duplicatedTokens": 1142,
            "percentage": 204.17,
            "percentageTokens": 136.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java": {
            "lines": 122,
            "tokens": 842,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 102,
            "duplicatedTokens": 681,
            "percentage": 83.61,
            "percentageTokens": 80.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java": {
            "lines": 164,
            "tokens": 1333,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 711,
            "percentage": 62.2,
            "percentageTokens": 53.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java": {
            "lines": 149,
            "tokens": 1184,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 98,
            "duplicatedTokens": 679,
            "percentage": 65.77,
            "percentageTokens": 57.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java": {
            "lines": 172,
            "tokens": 1427,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 150,
            "duplicatedTokens": 1135,
            "percentage": 87.21,
            "percentageTokens": 79.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java": {
            "lines": 173,
            "tokens": 1424,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 128,
            "duplicatedTokens": 975,
            "percentage": 73.99,
            "percentageTokens": 68.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java": {
            "lines": 168,
            "tokens": 1297,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 136,
            "duplicatedTokens": 1082,
            "percentage": 80.95,
            "percentageTokens": 83.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java": {
            "lines": 164,
            "tokens": 1236,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 120,
            "duplicatedTokens": 863,
            "percentage": 73.17,
            "percentageTokens": 69.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java": {
            "lines": 148,
            "tokens": 1189,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 667,
            "percentage": 68.92,
            "percentageTokens": 56.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java": {
            "lines": 158,
            "tokens": 1155,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 207,
            "duplicatedTokens": 1414,
            "percentage": 131.01,
            "percentageTokens": 122.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java": {
            "lines": 219,
            "tokens": 1818,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 264,
            "duplicatedTokens": 2028,
            "percentage": 120.55,
            "percentageTokens": 111.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPhone.java": {
            "lines": 190,
            "tokens": 1531,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 140,
            "duplicatedTokens": 1025,
            "percentage": 73.68,
            "percentageTokens": 66.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java": {
            "lines": 241,
            "tokens": 1982,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 157,
            "duplicatedTokens": 1147,
            "percentage": 65.15,
            "percentageTokens": 57.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java": {
            "lines": 177,
            "tokens": 1502,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 94,
            "duplicatedTokens": 637,
            "percentage": 53.11,
            "percentageTokens": 42.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java": {
            "lines": 177,
            "tokens": 1330,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 142,
            "duplicatedTokens": 1036,
            "percentage": 80.23,
            "percentageTokens": 77.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java": {
            "lines": 160,
            "tokens": 1194,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 78,
            "duplicatedTokens": 652,
            "percentage": 48.75,
            "percentageTokens": 54.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java": {
            "lines": 201,
            "tokens": 1640,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 134,
            "duplicatedTokens": 862,
            "percentage": 66.67,
            "percentageTokens": 52.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java": {
            "lines": 356,
            "tokens": 3073,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 148,
            "duplicatedTokens": 908,
            "percentage": 41.57,
            "percentageTokens": 29.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java": {
            "lines": 154,
            "tokens": 1208,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 103,
            "duplicatedTokens": 695,
            "percentage": 66.88,
            "percentageTokens": 57.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSet.java": {
            "lines": 173,
            "tokens": 1486,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 314,
            "percentage": 19.65,
            "percentageTokens": 21.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java": {
            "lines": 166,
            "tokens": 1375,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 695,
            "percentage": 60.84,
            "percentageTokens": 50.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/java/de/jmuelbert/jmbde/SecondaryController.java": {
            "lines": 11,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/java/de/jmuelbert/jmbde/PrimaryController.java": {
            "lines": 11,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/java/de/jmuelbert/jmbde/App.java": {
            "lines": 34,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/java/module-info.java": {
            "lines": 6,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 6634,
          "tokens": 48539,
          "sources": 54,
          "clones": 116,
          "duplicatedLines": 2126,
          "duplicatedTokens": 15061,
          "percentage": 32.05,
          "percentageTokens": 31.03,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "properties": {
        "sources": {
          "src/main/jmbde-app/branding/src/main/resources/de/jmuelbert/jmbde/branding/Bundle.properties": {
            "lines": 4,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/Bundle_de_DE.properties": {
            "lines": 17,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/Bundle.properties": {
            "lines": 42,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/src/de/jmuelbert/jmbde/options/Bundle.properties": {
            "lines": 3,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/sqljdbc/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/mysql-client/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/jmbde-datamodel/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/derbyclient/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/nbproject/project.properties": {
            "lines": 6,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/nbproject/project.properties": {
            "lines": 5,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/nbproject/project.properties": {
            "lines": 110,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/nbproject/genfiles.properties": {
            "lines": 7,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/project.properties": {
            "lines": 25,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/platform.properties": {
            "lines": 19,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/genfiles.properties": {
            "lines": 10,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 304,
          "tokens": 976,
          "sources": 19,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markup": {
        "sources": {
          "src/main/jmbde-datamodel/src/META-INF/persistence.xml": {
            "lines": 107,
            "tokens": 1111,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 108,
            "duplicatedTokens": 1008,
            "percentage": 100.93,
            "percentageTokens": 90.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/sqljdbc/nbproject/project.xml": {
            "lines": 18,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 288,
            "duplicatedTokens": 3171,
            "percentage": 654.55,
            "percentageTokens": 714.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/mysql-client/nbproject/project.xml": {
            "lines": 36,
            "tokens": 286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/mysql-client/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/jmbde-datamodel/nbproject/project.xml": {
            "lines": 53,
            "tokens": 339,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "duplicatedTokens": 314,
            "percentage": 100,
            "percentageTokens": 92.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/jmbde-datamodel/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/derbyclient/nbproject/project.xml": {
            "lines": 30,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/derbyclient/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/nbproject/project.xml": {
            "lines": 71,
            "tokens": 441,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 239,
            "percentage": 56.34,
            "percentageTokens": 54.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/nbproject/project.xml": {
            "lines": 116,
            "tokens": 706,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 136,
            "duplicatedTokens": 813,
            "percentage": 117.24,
            "percentageTokens": 115.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/nbproject/project.xml": {
            "lines": 129,
            "tokens": 787,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 106,
            "duplicatedTokens": 639,
            "percentage": 82.17,
            "percentageTokens": 81.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/project.xml": {
            "lines": 362,
            "tokens": 3128,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 37,
            "duplicatedTokens": 219,
            "percentage": 10.22,
            "percentageTokens": 7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/build-impl.xml": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 433,
            "percentage": 88.64,
            "percentageTokens": 97.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/nbproject/project.xml": {
            "lines": 15,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/sqljdbc/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/project.xml": {
            "lines": 8,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/platform.xml": {
            "lines": 33,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/nbproject/build-impl.xml": {
            "lines": 49,
            "tokens": 431,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "duplicatedTokens": 140,
            "percentage": 30.61,
            "percentageTokens": 32.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/mysql-client/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/jmbde-datamodel/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/derbyclient/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/branding/pom.xml": {
            "lines": 40,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Options/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/pom.xml": {
            "lines": 5,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/pom.xml": {
            "lines": 4,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/Eclipse-Persistence-Services/build.xml": {
            "lines": 7,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/build.xml": {
            "lines": 72,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/pom.xml": {
            "lines": 384,
            "tokens": 2634,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 123,
            "duplicatedTokens": 838,
            "percentage": 32.03,
            "percentageTokens": 31.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/build.xml": {
            "lines": 7,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "pom.xml": {
            "lines": 97,
            "tokens": 666,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 164,
            "percentage": 27.84,
            "percentageTokens": 24.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2044,
          "tokens": 15998,
          "sources": 36,
          "clones": 23,
          "duplicatedLines": 603,
          "duplicatedTokens": 5288,
          "percentage": 29.5,
          "percentageTokens": 33.05,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "src/main/jmbde-app/branding/demo/HELP.md": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/demo/HELP.md": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/demo/HELP.md": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/src/content/docs/reference/example.md": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/src/content/docs/guides/example.md": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/jmbde-datamodel/license.txt": {
            "lines": 143,
            "tokens": 4242,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 572,
            "duplicatedTokens": 16968,
            "percentage": 400,
            "percentageTokens": 400,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeViewer/license.txt": {
            "lines": 143,
            "tokens": 4242,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 143,
            "duplicatedTokens": 4242,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/EmployeeEditor/license.txt": {
            "lines": 143,
            "tokens": 4242,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 143,
            "duplicatedTokens": 4242,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-datamodel/license.txt": {
            "lines": 143,
            "tokens": 4242,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 143,
            "duplicatedTokens": 4242,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main/jmbde-app/license.txt": {
            "lines": 143,
            "tokens": 4242,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 143,
            "duplicatedTokens": 4242,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/README.md": {
            "lines": 52,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/MIT.txt": {
            "lines": 7,
            "tokens": 345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/ISC.txt": {
            "lines": 7,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/GPL-3.0-or-later.txt": {
            "lines": 231,
            "tokens": 9766,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 98,
            "duplicatedTokens": 4799,
            "percentage": 42.42,
            "percentageTokens": 49.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/GPL-2.0-or-later.txt": {
            "lines": 116,
            "tokens": 4849,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 707,
            "percentage": 15.52,
            "percentageTokens": 14.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/CC0-1.0.txt": {
            "lines": 115,
            "tokens": 2045,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 204,
            "percentage": 8.7,
            "percentageTokens": 9.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/CC-BY-SA-4.0.txt": {
            "lines": 169,
            "tokens": 1661,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/CC-BY-4.0.txt": {
            "lines": 89,
            "tokens": 4263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/BSD-3-Clause.txt": {
            "lines": 10,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/Apache-2.0.txt": {
            "lines": 200,
            "tokens": 727,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "LICENSES/AGPL-3.0-or-later.txt": {
            "lines": 234,
            "tokens": 9603,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 104,
            "duplicatedTokens": 5176,
            "percentage": 44.44,
            "percentageTokens": 53.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "SECURITY.md": {
            "lines": 16,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "README.md": {
            "lines": 85,
            "tokens": 639,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "CHANGELOG.md": {
            "lines": 14,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2089,
          "tokens": 56723,
          "sources": 24,
          "clones": 15,
          "duplicatedLines": 687,
          "duplicatedTokens": 22411,
          "percentage": 32.89,
          "percentageTokens": 39.51,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "docs/src/content/config.ts": {
            "lines": 5,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/.astro/astro/content.d.ts": {
            "lines": 185,
            "tokens": 1775,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 170,
            "percentage": 7.57,
            "percentageTokens": 9.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 190,
          "tokens": 1832,
          "sources": 2,
          "clones": 1,
          "duplicatedLines": 7,
          "duplicatedTokens": 85,
          "percentage": 3.68,
          "percentageTokens": 4.64,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "json": {
        "sources": {
          "docs/.vscode/launch.json": {
            "lines": 10,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/.vscode/extensions.json": {
            "lines": 3,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/package.json": {
            "lines": 19,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".vscode/settings.json": {
            "lines": 15,
            "tokens": 95,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".devcontainer/devcontainer.json": {
            "lines": 30,
            "tokens": 278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tsconfig.json": {
            "lines": 10,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tsconfig.eslint.json": {
            "lines": 3,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "biome.json": {
            "lines": 114,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".secretlintrc.json": {
            "lines": 6,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".markdownlint.json": {
            "lines": 159,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".markdown-link-check.json": {
            "lines": 4,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".jscpd.json": {
            "lines": 17,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".eslintrc.json": {
            "lines": 16,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 406,
          "tokens": 2226,
          "sources": 13,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "docs/astro.config.mjs": {
            "lines": 27,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "eslint.config.js": {
            "lines": 54,
            "tokens": 363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 81,
          "tokens": 520,
          "sources": 2,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "yaml": {
        "sources": {
          "goodcheck.yml": {
            "lines": 13,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "cspell.config.yaml": {
            "lines": 125,
            "tokens": 737,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".yamllint.yml": {
            "lines": 10,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".prettierrc.yaml": {
            "lines": 8,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".mega-linter.yml": {
            "lines": 31,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".hound.yml": {
            "lines": 21,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".hadolint.yml": {
            "lines": 5,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".grype.yaml": {
            "lines": 149,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".gitlab-ci.yml": {
            "lines": 48,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".checkov.yml": {
            "lines": 3,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 413,
          "tokens": 1820,
          "sources": 10,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "url": {
        "sources": {
          "README.md": {
            "lines": 33,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 33,
          "tokens": 202,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "ini": {
        "sources": {
          ".vale.ini": {
            "lines": 8,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 8,
          "tokens": 56,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 12202,
      "tokens": 128892,
      "sources": 162,
      "clones": 155,
      "duplicatedLines": 3423,
      "duplicatedTokens": 42845,
      "percentage": 28.05,
      "percentageTokens": 33.24,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "java",
      "lines": 16,
      "fragment": ";\n\nimport static org.junit.Assert.*;\n\nimport java.awt.event.ActionEvent;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\n\n/**\n *\n * @author jurgenmulbert\n */\npublic class EmployeeNewActionListenerIT",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EmployeeNewActionListenerIT.java",
        "start": 6,
        "end": 21,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 21,
          "column": 28,
          "position": 93
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeRootRefreshActionListenerIT.java",
        "start": 6,
        "end": 21,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 21,
          "column": 36,
          "position": 93
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ";\n\nimport static org.junit.Assert.*;\n\nimport java.util.Properties;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.openide.util",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponentIT.java",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 16,
          "column": 5,
          "position": 90
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/EmployeeViewerTopComponentIT.java",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 16,
          "column": 9,
          "position": 90
        }
      }
    },
    {
      "format": "java",
      "lines": 16,
      "fragment": ";\n\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\n\n/**\n *\n * @author jurgenmulbert\n */\n@RunWith(Suite.class)\n@Suite.SuiteClasses(\n    {de.jmuelbert.jmbde.employee.editor",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/test/unit/src/de/jmuelbert/jmbde/employee/editor/EditorITSuite.java",
        "start": 6,
        "end": 21,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 21,
          "column": 7,
          "position": 99
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/test/unit/src/de/jmuelbert/jmbde/employee/viewer/ViewerITSuite.java",
        "start": 6,
        "end": 21,
        "startLoc": {
          "line": 6,
          "column": 7,
          "position": 13
        },
        "endLoc": {
          "line": 21,
          "column": 7,
          "position": 99
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": "package com.example.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(DemoApplication.class, args);\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/demo/src/main/java/com/example/demo/DemoApplication.java",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 81
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/branding/demo/src/main/java/com/example/demo/DemoApplication.java",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 81
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": "package com.example.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(DemoApplication.class, args);\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/demo/src/main/java/com/example/demo/DemoApplication.java",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 81
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/branding/demo/src/main/java/com/example/demo/DemoApplication.java",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 81
        }
      }
    },
    {
      "format": "java",
      "lines": 23,
      "fragment": "package de.jmuelbert.jmbde.employee.editor;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport org.openide.awt.ActionID;\nimport org.openide.awt.ActionReference;\nimport org.openide.awt.ActionReferences;\nimport org.openide.awt.ActionRegistration;\nimport org.openide.util.NbBundle.Messages;\nimport org.openide.windows.WindowManager;\n\n/**\n * New Entry for the Employee's\n * Create an Action Listener\n * @author Jürgen Mülbert\n * @version 0.2\n *\n * @see java.awt.event.ActionListener\n * @see org.openide.awt.ActionID\n * @see org.openide.awt.ActionReference\n * @see org.openide.awt.ActionRegistration\n * @see org.openide.util.NbBundle.Messages\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeNewActionListener.java",
        "start": 22,
        "end": 44,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 44,
          "column": 4,
          "position": 108
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeePrintActionListener.java",
        "start": 24,
        "end": 47,
        "startLoc": {
          "line": 24,
          "column": 1,
          "position": 6
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 110
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": "// TODO Check the Link to the license\n\npackage de.jmuelbert.jmbde.employee.editor;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport org.openide.awt.ActionID;\nimport org.openide.awt.ActionReference;\nimport org.openide.awt.ActionRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeExportActionListener.java",
        "start": 22,
        "end": 30,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 30,
          "column": 19,
          "position": 72
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeePrintActionListener.java",
        "start": 22,
        "end": 30,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 30,
          "column": 17,
          "position": 72
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": ",\n                                javax.swing.GroupLayout.PREFERRED_SIZE,\n                                javax.swing.GroupLayout.DEFAULT_SIZE,\n                                javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGap(18, 18, 18)\n                    .addGroup(\n                        layout\n                            .createParallelGroup(\n                                javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel4",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 528,
        "end": 537,
        "startLoc": {
          "line": 528,
          "column": 17,
          "position": 3757
        },
        "endLoc": {
          "line": 537,
          "column": 8,
          "position": 3832
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 517,
        "end": 526,
        "startLoc": {
          "line": 517,
          "column": 14,
          "position": 3672
        },
        "endLoc": {
          "line": 526,
          "column": 8,
          "position": 3747
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": ",\n                                javax.swing.GroupLayout.PREFERRED_SIZE,\n                                javax.swing.GroupLayout.DEFAULT_SIZE,\n                                javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGap(18, 18, 18)\n                    .addGroup(\n                        layout\n                            .createParallelGroup(\n                                javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel6",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 545,
        "end": 554,
        "startLoc": {
          "line": 545,
          "column": 14,
          "position": 3888
        },
        "endLoc": {
          "line": 554,
          "column": 8,
          "position": 3963
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 517,
        "end": 526,
        "startLoc": {
          "line": 517,
          "column": 14,
          "position": 3672
        },
        "endLoc": {
          "line": 526,
          "column": 8,
          "position": 3747
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ",\n                                javax.swing.GroupLayout.PREFERRED_SIZE,\n                                javax.swing.GroupLayout.DEFAULT_SIZE,\n                                javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addPreferredGap(\n                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                    .addGroup(\n                        layout\n                            .createParallelGroup(\n                                javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel9",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 582,
        "end": 592,
        "startLoc": {
          "line": 582,
          "column": 19,
          "position": 4165
        },
        "endLoc": {
          "line": 592,
          "column": 8,
          "position": 4244
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 570,
        "end": 580,
        "startLoc": {
          "line": 570,
          "column": 14,
          "position": 4076
        },
        "endLoc": {
          "line": 580,
          "column": 8,
          "position": 4155
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": " YOU WANT TO SAVE\") +\n              firstnameTextField.getText() + \" \" + nameTextField.getText() +\n              \" (\"                              // NOI18N\n              + cityTextField.getText() + \")\\\"?\", // NOI18N\n          NotifyDescriptor.OK_CANCEL_OPTION, NotifyDescriptor.QUESTION_MESSAGE);\n      Object result = DialogDisplayer.getDefault().notify(message);\n      // When user clicks \"Yes\", indicating they really want to save,\n      // we need to disable the Save action,\n      // so that it will only be usable when the next change is made\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 847,
        "end": 856,
        "startLoc": {
          "line": 847,
          "column": 2,
          "position": 6487
        },
        "endLoc": {
          "line": 856,
          "column": 21,
          "position": 6572
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 796,
        "end": 804,
        "startLoc": {
          "line": 796,
          "column": 2,
          "position": 6029
        },
        "endLoc": {
          "line": 804,
          "column": 36,
          "position": 6113
        }
      }
    },
    {
      "format": "java",
      "lines": 23,
      "fragment": "package de.jmuelbert.jmbde.employee.editor;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport org.openide.awt.ActionID;\nimport org.openide.awt.ActionReference;\nimport org.openide.awt.ActionRegistration;\nimport org.openide.util.NbBundle.Messages;\nimport org.openide.windows.WindowManager;\n/**\n * A Entry for Delete Employee-Data\n *\n * Create an Action Listener\n *\n * @author Jürgen Mülbert\n * @version 1.0\n *\n * @see ava.awt.event.ActionListener\n * @see org.openide.awt.ActionID\n * @see org.openide.awt.ActionReference\n * @see org.openide.awt.ActionRegistration\n * @see org.openide.util.NbBundle.Messages\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeDeleteActionListener.java",
        "start": 22,
        "end": 44,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 44,
          "column": 4,
          "position": 96
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeePrintActionListener.java",
        "start": 24,
        "end": 46,
        "startLoc": {
          "line": 24,
          "column": 1,
          "position": 6
        },
        "endLoc": {
          "line": 46,
          "column": 4,
          "position": 99
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": ")); // NOI18N\n\n    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n    this.setLayout(layout);\n    layout.setHorizontalGroup(\n        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(\n                layout.createSequentialGroup()\n                    .addContainerGap",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/Options/src/de/jmuelbert/jmbde/options/DatabasePanel.java",
        "start": 52,
        "end": 60,
        "startLoc": {
          "line": 52,
          "column": 35,
          "position": 349
        },
        "endLoc": {
          "line": 60,
          "column": 16,
          "position": 424
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/src/de/jmuelbert/jmbde/employee/editor/EmployeeEditorTopComponent.java",
        "start": 332,
        "end": 340,
        "startLoc": {
          "line": 332,
          "column": 43,
          "position": 2635
        },
        "endLoc": {
          "line": 340,
          "column": 9,
          "position": 2710
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.ManyToMany",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 13,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "ystemDataSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  pu",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 14,
          "position": 524
        },
        "endLoc": {
          "line": 99,
          "column": 8,
          "position": 667
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 673
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "SetCollection = accountSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    i",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 21,
          "position": 816
        },
        "endLoc": {
          "line": 128,
          "column": 14,
          "position": 929
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "SystemDataSet other = (SystemDataSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 14,
          "position": 956
        },
        "endLoc": {
          "line": 141,
          "column": 50,
          "position": 1060
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "areSet softwareSet) {\r\n    this.softwareSet = softwareSet;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 12,
          "position": 577
        },
        "endLoc": {
          "line": 106,
          "column": 19,
          "position": 690
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "    }\r\n    SoftwareSetProgram other = (SoftwareSetProgram)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    retu",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 109,
        "end": 119,
        "startLoc": {
          "line": 109,
          "column": 19,
          "position": 717
        },
        "endLoc": {
          "line": 119,
          "column": 55,
          "position": 821
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.NamedQueries",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 13,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 34,
      "fragment": "eSetOperationSystem(Integer id) { this.id = id; }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetComputer> getDeviceSetComputerCollection() {\r\n    return deviceSetComputerCollection;\r\n  }\r\n\r\n  public void setDeviceSetComputerCollection(\r\n      Collection<DeviceSetComputer> deviceSetComputerCollection) {\r\n    this.deviceSetComputerCollection = deviceSetComputerCollection;\r\n  }\r\n\r\n  public SoftwareSet getSoftwareSet() { return softwareSet; }\r\n\r\n  public void setSoftwareSet(SoftwareSet softwareSet) {\r\n    this.softwareSet = softwareSet;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // se",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java",
        "start": 74,
        "end": 107,
        "startLoc": {
          "line": 74,
          "column": 27,
          "position": 401
        },
        "endLoc": {
          "line": 107,
          "column": 27,
          "position": 693
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 73,
        "end": 128,
        "startLoc": {
          "line": 73,
          "column": 19,
          "position": 398
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "areSetOperationSystem other = (SoftwareSetOperationSystem)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.j",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java",
        "start": 110,
        "end": 120,
        "startLoc": {
          "line": 110,
          "column": 27,
          "position": 720
        },
        "endLoc": {
          "line": 120,
          "column": 63,
          "position": 824
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public String",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 93,
        "end": 106,
        "startLoc": {
          "line": 93,
          "column": 12,
          "position": 629
        },
        "endLoc": {
          "line": 106,
          "column": 7,
          "position": 772
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 673
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": ";\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof SoftwareSet",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 27,
          "position": 1073
        },
        "endLoc": {
          "line": 150,
          "column": 12,
          "position": 1186
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ")object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert.jmbde.datamodel.SoftwareSet[ id=\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 153,
        "end": 163,
        "startLoc": {
          "line": 153,
          "column": 12,
          "position": 1213
        },
        "endLoc": {
          "line": 163,
          "column": 48,
          "position": 1317
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": ";\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.CascadeType;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 26,
        "end": 35,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 36
        },
        "endLoc": {
          "line": 35,
          "column": 10,
          "position": 125
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 25,
        "end": 34,
        "startLoc": {
          "line": 25,
          "column": 13,
          "position": 26
        },
        "endLoc": {
          "line": 34,
          "column": 9,
          "position": 115
        }
      }
    },
    {
      "format": "java",
      "lines": 21,
      "fragment": ";\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The ProcessorSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 29,
        "end": 49,
        "startLoc": {
          "line": 29,
          "column": 12,
          "position": 66
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 189
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 28,
        "end": 48,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 56
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "public ProcessorSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  pu",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 89,
        "end": 102,
        "startLoc": {
          "line": 89,
          "column": 13,
          "position": 582
        },
        "endLoc": {
          "line": 102,
          "column": 9,
          "position": 727
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 99,
          "column": 12,
          "position": 675
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "deviceSetComputerCollection = deviceSetComputerCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 121,
        "end": 135,
        "startLoc": {
          "line": 121,
          "column": 28,
          "position": 924
        },
        "endLoc": {
          "line": 135,
          "column": 13,
          "position": 1037
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "urn false;\r\n    }\r\n    ProcessorSet other = (ProcessorSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 138,
        "end": 148,
        "startLoc": {
          "line": 138,
          "column": 13,
          "position": 1064
        },
        "endLoc": {
          "line": 148,
          "column": 49,
          "position": 1168
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 13,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 18,
      "fragment": ";\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The PlaceSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 33,
        "end": 50,
        "startLoc": {
          "line": 33,
          "column": 10,
          "position": 106
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 31,
        "end": 48,
        "startLoc": {
          "line": 31,
          "column": 3,
          "position": 86
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "\n\r\n  public PlaceSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  p",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 96,
        "end": 109,
        "startLoc": {
          "line": 96,
          "column": 9,
          "position": 670
        },
        "endLoc": {
          "line": 109,
          "column": 8,
          "position": 815
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 106,
          "column": 11,
          "position": 774
        }
      }
    },
    {
      "format": "java",
      "lines": 17,
      "fragment": ") { this.desk = desk; }\r\n\r\n  public Date getLastUpdate() { return lastUpdate; }\r\n\r\n  public void setLastUpdate(Date lastUpdate) { this.lastUpdate = lastUpdate; }\r\n\r\n  @XmlTransient\r\n  public Collection<AddressSetEmployee> getAddressSetEmployeeCollection() {\r\n    return addressSetEmployeeCollection;\r\n  }\r\n\r\n  public void setAddressSetEmployeeCollection(\r\n      Collection<AddressSetEmployee> addressSetEmployeeCollection) {\r\n    this.addressSetEmploye",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 115,
        "end": 131,
        "startLoc": {
          "line": 115,
          "column": 5,
          "position": 901
        },
        "endLoc": {
          "line": 131,
          "column": 7,
          "position": 1022
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 101,
        "end": 117,
        "startLoc": {
          "line": 101,
          "column": 9,
          "position": 712
        },
        "endLoc": {
          "line": 117,
          "column": 10,
          "position": 833
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "eviceSetPrinter printerId) {\r\n    this.printerId = printerId;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fiel",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 144,
        "end": 158,
        "startLoc": {
          "line": 144,
          "column": 10,
          "position": 1167
        },
        "endLoc": {
          "line": 158,
          "column": 9,
          "position": 1280
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "\r\n      return false;\r\n    }\r\n    PlaceSet other = (PlaceSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString(",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 161,
        "end": 171,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 1307
        },
        "endLoc": {
          "line": 171,
          "column": 45,
          "position": 1411
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ";\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 13,
          "position": 26
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 125
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 26,
        "end": 36,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 36
        },
        "endLoc": {
          "line": 36,
          "column": 10,
          "position": 135
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public String getDescription",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 101,
        "end": 114,
        "startLoc": {
          "line": 101,
          "column": 13,
          "position": 678
        },
        "endLoc": {
          "line": 114,
          "column": 15,
          "position": 823
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 106,
          "column": 11,
          "position": 774
        }
      }
    },
    {
      "format": "java",
      "lines": 30,
      "fragment": "; }\r\n\r\n  public DeviceSetComputer getComputerId() { return computerId; }\r\n\r\n  public void setComputerId(DeviceSetComputer computerId) {\r\n    this.computerId = computerId;\r\n  }\r\n\r\n  public DeviceSetPhone getPhoneId() { return phoneId; }\r\n\r\n  public void setPhoneId(DeviceSetPhone phoneId) { this.phoneId = phoneId; }\r\n\r\n  public DeviceSetPrinter getPrinterId() { return printerId; }\r\n\r\n  public void setPrinterId(DeviceSetPrinter printerId) {\r\n    this.printerId = printerId;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof InventorySet",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 130,
        "end": 159,
        "startLoc": {
          "line": 130,
          "column": 11,
          "position": 1011
        },
        "endLoc": {
          "line": 159,
          "column": 13,
          "position": 1277
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 128,
        "end": 128,
        "startLoc": {
          "line": 128,
          "column": 29,
          "position": 1012
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ")object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert.jmbde.datamodel.InventorySet[ id=\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 13,
          "position": 1304
        },
        "endLoc": {
          "line": 172,
          "column": 49,
          "position": 1408
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 33,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 10,
          "position": 105
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 10,
          "position": 105
        }
      }
    },
    {
      "format": "java",
      "lines": 18,
      "fragment": ";\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DoorSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 33,
        "end": 50,
        "startLoc": {
          "line": 33,
          "column": 10,
          "position": 106
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 31,
        "end": 49,
        "startLoc": {
          "line": 31,
          "column": 3,
          "position": 86
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "nteger id) { this.id = id; }\r\n\r\n  public DoorSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(Str",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 96,
        "end": 109,
        "startLoc": {
          "line": 96,
          "column": 8,
          "position": 666
        },
        "endLoc": {
          "line": 109,
          "column": 5,
          "position": 809
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 673
        }
      }
    },
    {
      "format": "java",
      "lines": 17,
      "fragment": "lic void setName(String name) { this.name = name; }\r\n\r\n  public Date getLastUpdate() { return lastUpdate; }\r\n\r\n  public void setLastUpdate(Date lastUpdate) { this.lastUpdate = lastUpdate; }\r\n\r\n  @XmlTransient\r\n  public Collection<AddressSetEmployee> getAddressSetEmployeeCollection() {\r\n    return addressSetEmployeeCollection;\r\n  }\r\n\r\n  public void setAddressSetEmployeeCollection(\r\n      Collection<AddressSetEmployee> addressSetEmployeeCollection) {\r\n    t",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 107,
        "end": 123,
        "startLoc": {
          "line": 107,
          "column": 5,
          "position": 799
        },
        "endLoc": {
          "line": 123,
          "column": 14,
          "position": 920
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 101,
        "end": 117,
        "startLoc": {
          "line": 101,
          "column": 9,
          "position": 712
        },
        "endLoc": {
          "line": 117,
          "column": 10,
          "position": 833
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "DoorSchemaSetCollection(\r\n      Collection<DoorSchemaSet> doorSchemaSetCollection) {\r\n    this.doorSchemaSetCollection = doorSchemaSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Ob",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 140,
        "end": 154,
        "startLoc": {
          "line": 140,
          "column": 24,
          "position": 1037
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1150
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof DoorSet)) {\r\n      return false;\r\n    }\r\n    DoorSet other = (DoorSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 157,
        "end": 167,
        "startLoc": {
          "line": 157,
          "column": 8,
          "position": 1177
        },
        "endLoc": {
          "line": 167,
          "column": 44,
          "position": 1281
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 50,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DoorSchemaSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java",
        "start": 1,
        "end": 50,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 49,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": "implements Serializable {\r\n\r\n  private static final long serialVersionUID = 1L;\r\n  @Id @Basic(optional = false) @Column(name = \"Id\") private Integer id;\r\n  @Basic(optional = false) @Column(name = \"Name\") private String name;\r\n  @Column(name = \"LastUpdate\")\r\n  @Temporal(TemporalType.TIMESTAMP)\r\n  private Date lastUpdate;\r\n  @JoinTable(\r\n      name = \"EmployeeDoorSchema\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 326
        },
        "endLoc": {
          "line": 77,
          "column": 21,
          "position": 448
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 322
        },
        "endLoc": {
          "line": 74,
          "column": 15,
          "position": 441
        }
      }
    },
    {
      "format": "java",
      "lines": 39,
      "fragment": " this.id = id; }\r\n\r\n  public DoorSchemaSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public Date getLastUpdate() { return lastUpdate; }\r\n\r\n  public void setLastUpdate(Date lastUpdate) { this.lastUpdate = lastUpdate; }\r\n\r\n  @XmlTransient\r\n  public Collection<AddressSetEmployee> getAddressSetEmployeeCollection() {\r\n    return addressSetEmployeeCollection;\r\n  }\r\n\r\n  public void setAddressSetEmployeeCollection(\r\n      Collection<AddressSetEmployee> addressSetEmployeeCollection) {\r\n    this.addressSetEmployeeCollection = addressSetEmployeeCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<ChipCardSet> getChipCardSetCollection() {\r\n    return chipCardSetCollection;\r\n  }\r\n\r\n  public void\r\n  setChipCardSetCollection(Collection<ChipCardSet> chipCardSetCollection) {\r\n    this.chip",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java",
        "start": 93,
        "end": 131,
        "startLoc": {
          "line": 93,
          "column": 14,
          "position": 608
        },
        "endLoc": {
          "line": 131,
          "column": 21,
          "position": 933
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 134,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 134,
          "column": 27,
          "position": 991
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "\n\r\n  public void setDoorSetCollection(Collection<DoorSet> doorSetCollection) {\r\n    this.doorSetCollection = doorSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // T",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 18,
          "position": 976
        },
        "endLoc": {
          "line": 150,
          "column": 14,
          "position": 1089
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "   // set\r\n    if (!(object instanceof DoorSchemaSet)) {\r\n      return false;\r\n    }\r\n    DoorSchemaSet other = (DoorSchemaSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSchemaSet.java",
        "start": 153,
        "end": 163,
        "startLoc": {
          "line": 153,
          "column": 14,
          "position": 1116
        },
        "endLoc": {
          "line": 163,
          "column": 50,
          "position": 1220
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.Lob",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 4,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 17,
      "fragment": ";\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n/**\r\n * The DocumentsSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 32,
        "end": 48,
        "startLoc": {
          "line": 32,
          "column": 4,
          "position": 96
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 175
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 86
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 165
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": ";\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public byte",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 92,
        "end": 103,
        "startLoc": {
          "line": 92,
          "column": 11,
          "position": 623
        },
        "endLoc": {
          "line": 103,
          "column": 5,
          "position": 733
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 88,
        "end": 99,
        "startLoc": {
          "line": 88,
          "column": 5,
          "position": 563
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 673
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": ";\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof DocumentsSet",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 120,
        "end": 134,
        "startLoc": {
          "line": 120,
          "column": 11,
          "position": 929
        },
        "endLoc": {
          "line": 134,
          "column": 13,
          "position": 1042
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ")object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert.jmbde.datamodel.DocumentsSet[ id=\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 137,
        "end": 147,
        "startLoc": {
          "line": 137,
          "column": 13,
          "position": 1069
        },
        "endLoc": {
          "line": 147,
          "column": 49,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 49,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DeviceTypeSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see DeviceSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 1,
        "end": 49,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": "implements Serializable {\r\n\r\n  private static final long serialVersionUID = 1L;\r\n  @Id @Basic(optional = false) @Column(name = \"Id\") private Integer id;\r\n  @Basic(optional = false) @Column(name = \"Name\") private String name;\r\n  @Column(name = \"LastUpdate\")\r\n  @Temporal(TemporalType.TIMESTAMP)\r\n  private Date lastUpdate;\r\n  @OneToMany",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 67,
        "end": 75,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 306
        },
        "endLoc": {
          "line": 75,
          "column": 11,
          "position": 419
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 322
        },
        "endLoc": {
          "line": 74,
          "column": 11,
          "position": 435
        }
      }
    },
    {
      "format": "java",
      "lines": 19,
      "fragment": "teger id) { this.id = id; }\r\n\r\n  public DeviceTypeSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public Date getLastUpdate() { return lastUpdate; }\r\n\r\n  public void setLastUpdate(Date lastUpdate) { this.lastUpdate = lastUpdate; }\r\n\r\n  @XmlTransie",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 86,
        "end": 104,
        "startLoc": {
          "line": 86,
          "column": 14,
          "position": 523
        },
        "endLoc": {
          "line": 104,
          "column": 30,
          "position": 721
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 114,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 114,
          "column": 32,
          "position": 864
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "c void setDeviceSetPhoneCollection(\r\n      Collection<DeviceSetPhone> deviceSetPhoneCollection) {\r\n    this.deviceSetPhoneCollection = deviceSetPhoneCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 130,
        "end": 144,
        "startLoc": {
          "line": 130,
          "column": 25,
          "position": 895
        },
        "endLoc": {
          "line": 144,
          "column": 14,
          "position": 1008
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "the case the id fields are not\r\n    // set\r\n    if (!(object instanceof DeviceTypeSet)) {\r\n      return false;\r\n    }\r\n    DeviceTypeSet other = (DeviceTypeSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 147,
        "end": 157,
        "startLoc": {
          "line": 147,
          "column": 14,
          "position": 1035
        },
        "endLoc": {
          "line": 157,
          "column": 50,
          "position": 1139
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.ManyToOne",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ";\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 26,
        "end": 36,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 36
        },
        "endLoc": {
          "line": 36,
          "column": 9,
          "position": 135
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/PlaceSet.java",
        "start": 27,
        "end": 37,
        "startLoc": {
          "line": 27,
          "column": 5,
          "position": 46
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 145
        }
      }
    },
    {
      "format": "java",
      "lines": 18,
      "fragment": ";\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DeviceSetPrinter Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see DeviceSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 32,
        "end": 49,
        "startLoc": {
          "line": 32,
          "column": 10,
          "position": 96
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java",
        "start": 31,
        "end": 48,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 86
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 169
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": " placeSetCollection) {\r\n    this.placeSetCollection = placeSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 191,
        "end": 205,
        "startLoc": {
          "line": 191,
          "column": 19,
          "position": 1558
        },
        "endLoc": {
          "line": 205,
          "column": 17,
          "position": 1671
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "    return false;\r\n    }\r\n    DeviceSetPrinter other = (DeviceSetPrinter)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toStr",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 208,
        "end": 218,
        "startLoc": {
          "line": 208,
          "column": 17,
          "position": 1698
        },
        "endLoc": {
          "line": 218,
          "column": 53,
          "position": 1802
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 49,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DeviceSetPhone Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see DeviceSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPhone.java",
        "start": 1,
        "end": 49,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 169
        }
      }
    },
    {
      "format": "java",
      "lines": 19,
      "fragment": ")\r\n  private Collection<InventorySet> inventorySetCollection;\r\n  @JoinColumn(name = \"Employee_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private AddressSetEmployee employeeId;\r\n  @JoinColumn(name = \"Manufacturer_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private AddressSetManufacturer manufacturerId;\r\n  @JoinColumn(name = \"Department_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private DepartmentSet departmentId;\r\n  @JoinColumn(name = \"Id\", referencedColumnName = \"Id\", insertable = false,\r\n              updatable = false)\r\n  @OneToOne(optional = false)\r\n  private DeviceSet deviceSet;\r\n  @JoinColumn(name = \"DeviceType_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private DeviceTypeSet deviceTypeId;\r\n  @OneToMany(mapped",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPhone.java",
        "start": 77,
        "end": 95,
        "startLoc": {
          "line": 77,
          "column": 10,
          "position": 448
        },
        "endLoc": {
          "line": 95,
          "column": 10,
          "position": 645
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 92,
        "end": 110,
        "startLoc": {
          "line": 92,
          "column": 12,
          "position": 584
        },
        "endLoc": {
          "line": 110,
          "column": 12,
          "position": 781
        }
      }
    },
    {
      "format": "java",
      "lines": 65,
      "fragment": ".cardNumber = cardNumber; }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  @XmlTransient\r\n  public Collection<InventorySet> getInventorySetCollection() {\r\n    return inventorySetCollection;\r\n  }\r\n\r\n  public void\r\n  setInventorySetCollection(Collection<InventorySet> inventorySetCollection) {\r\n    this.inventorySetCollection = inventorySetCollection;\r\n  }\r\n\r\n  public AddressSetEmployee getEmployeeId() { return employeeId; }\r\n\r\n  public void setEmployeeId(AddressSetEmployee employeeId) {\r\n    this.employeeId = employeeId;\r\n  }\r\n\r\n  public AddressSetManufacturer getManufacturerId() { return manufacturerId; }\r\n\r\n  public void setManufacturerId(AddressSetManufacturer manufacturerId) {\r\n    this.manufacturerId = manufacturerId;\r\n  }\r\n\r\n  public DepartmentSet getDepartmentId() { return departmentId; }\r\n\r\n  public void setDepartmentId(DepartmentSet departmentId) {\r\n    this.departmentId = departmentId;\r\n  }\r\n\r\n  public DeviceSet getDeviceSet() { return deviceSet; }\r\n\r\n  public void setDeviceSet(DeviceSet deviceSet) { this.deviceSet = deviceSet; }\r\n\r\n  public DeviceTypeSet getDeviceTypeId() { return deviceTypeId; }\r\n\r\n  public void setDeviceTypeId(DeviceTypeSet deviceTypeId) {\r\n    this.deviceTypeId = deviceTypeId;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<PlaceSet> getPlaceSetCollection() {\r\n    return placeSetCollection;\r\n  }\r\n\r\n  public void setPlaceSetCollection(Collection<PlaceSet> placeSetCollection) {\r\n    this.placeSetCollection = placeSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the i",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPhone.java",
        "start": 112,
        "end": 176,
        "startLoc": {
          "line": 112,
          "column": 11,
          "position": 839
        },
        "endLoc": {
          "line": 176,
          "column": 15,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 141,
        "end": 128,
        "startLoc": {
          "line": 141,
          "column": 10,
          "position": 1126
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "\r\n      return false;\r\n    }\r\n    DeviceSetPhone other = (DeviceSetPhone)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toS",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPhone.java",
        "start": 179,
        "end": 189,
        "startLoc": {
          "line": 179,
          "column": 15,
          "position": 1411
        },
        "endLoc": {
          "line": 189,
          "column": 51,
          "position": 1515
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 32,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 95
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": ";\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.ManyToOne",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 26,
        "end": 34,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 36
        },
        "endLoc": {
          "line": 34,
          "column": 10,
          "position": 115
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 27,
        "end": 35,
        "startLoc": {
          "line": 27,
          "column": 5,
          "position": 46
        },
        "endLoc": {
          "line": 35,
          "column": 13,
          "position": 125
        }
      }
    },
    {
      "format": "java",
      "lines": 19,
      "fragment": ";\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DeviceSetComputer Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see DeviceSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 33,
        "end": 51,
        "startLoc": {
          "line": 33,
          "column": 11,
          "position": 106
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 31,
        "end": 48,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 86
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 169
        }
      }
    },
    {
      "format": "java",
      "lines": 19,
      "fragment": "pedBy = \"computerId\")\r\n  private Collection<InventorySet> inventorySetCollection;\r\n  @JoinColumn(name = \"Employee_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private AddressSetEmployee employeeId;\r\n  @JoinColumn(name = \"Manufacturer_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private AddressSetManufacturer manufacturerId;\r\n  @JoinColumn(name = \"Department_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private DepartmentSet departmentId;\r\n  @JoinColumn(name = \"Id\", referencedColumnName = \"Id\", insertable = false,\r\n              updatable = false)\r\n  @OneToOne(optional = false)\r\n  private DeviceSet deviceSet;\r\n  @JoinColumn(name = \"DeviceType_Id\", referencedColumnName = \"Id\")\r\n  @ManyToOne\r\n  private DeviceTy",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 91,
        "end": 109,
        "startLoc": {
          "line": 91,
          "column": 13,
          "position": 601
        },
        "endLoc": {
          "line": 109,
          "column": 12,
          "position": 792
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 92,
        "end": 110,
        "startLoc": {
          "line": 92,
          "column": 12,
          "position": 584
        },
        "endLoc": {
          "line": 110,
          "column": 11,
          "position": 775
        }
      }
    },
    {
      "format": "java",
      "lines": 42,
      "fragment": "mCollection) {\r\n    this.softwareSetProgramCollection = softwareSetProgramCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<InventorySet> getInventorySetCollection() {\r\n    return inventorySetCollection;\r\n  }\r\n\r\n  public void\r\n  setInventorySetCollection(Collection<InventorySet> inventorySetCollection) {\r\n    this.inventorySetCollection = inventorySetCollection;\r\n  }\r\n\r\n  public AddressSetEmployee getEmployeeId() { return employeeId; }\r\n\r\n  public void setEmployeeId(AddressSetEmployee employeeId) {\r\n    this.employeeId = employeeId;\r\n  }\r\n\r\n  public AddressSetManufacturer getManufacturerId() { return manufacturerId; }\r\n\r\n  public void setManufacturerId(AddressSetManufacturer manufacturerId) {\r\n    this.manufacturerId = manufacturerId;\r\n  }\r\n\r\n  public DepartmentSet getDepartmentId() { return departmentId; }\r\n\r\n  public void setDepartmentId(DepartmentSet departmentId) {\r\n    this.departmentId = departmentId;\r\n  }\r\n\r\n  public DeviceSet getDeviceSet() { return deviceSet; }\r\n\r\n  public void setDeviceSet(DeviceSet deviceSet) { this.deviceSet = deviceSet; }\r\n\r\n  public DeviceTypeSet getDeviceTypeId() { return deviceTypeId; }\r\n\r\n  p",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 151,
        "end": 192,
        "startLoc": {
          "line": 151,
          "column": 29,
          "position": 1225
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 1559
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 145,
        "end": 185,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 1175
        },
        "endLoc": {
          "line": 185,
          "column": 14,
          "position": 1507
        }
      }
    },
    {
      "format": "java",
      "lines": 24,
      "fragment": "perationSystemId(SoftwareSetOperationSystem operationSystemId) {\r\n    this.operationSystemId = operationSystemId;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<PlaceSet> getPlaceSetCollection() {\r\n    return placeSetCollection;\r\n  }\r\n\r\n  public void setPlaceSetCollection(Collection<PlaceSet> placeSetCollection) {\r\n    this.placeSetCollection = placeSetCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    //",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 204,
        "end": 227,
        "startLoc": {
          "line": 204,
          "column": 18,
          "position": 1661
        },
        "endLoc": {
          "line": 227,
          "column": 18,
          "position": 1835
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetPrinter.java",
        "start": 182,
        "end": 128,
        "startLoc": {
          "line": 182,
          "column": 13,
          "position": 1497
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "set\r\n    if (!(object instanceof DeviceSetComputer)) {\r\n      return false;\r\n    }\r\n    DeviceSetComputer other = (DeviceSetComputer)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 230,
        "end": 240,
        "startLoc": {
          "line": 230,
          "column": 18,
          "position": 1862
        },
        "endLoc": {
          "line": 240,
          "column": 54,
          "position": 1966
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 47,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.CascadeType;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n/**\r\n * The DeviceSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 165
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 165
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public String getSerialNumber",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java",
        "start": 95,
        "end": 108,
        "startLoc": {
          "line": 95,
          "column": 10,
          "position": 695
        },
        "endLoc": {
          "line": 108,
          "column": 16,
          "position": 840
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 106,
          "column": 11,
          "position": 774
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": ";\r\n  }\r\n\r\n  public Date getSince() { return since; }\r\n\r\n  public void setSince(Date since) { this.since = since; }\r\n\r\n  public Boolean getActive() { return active; }\r\n\r\n  public void setActive(Boolean active) { this.active = active; }\r\n\r\n  public Boolean",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java",
        "start": 111,
        "end": 122,
        "startLoc": {
          "line": 111,
          "column": 13,
          "position": 879
        },
        "endLoc": {
          "line": 122,
          "column": 8,
          "position": 989
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 117,
        "end": 128,
        "startLoc": {
          "line": 117,
          "column": 12,
          "position": 862
        },
        "endLoc": {
          "line": 128,
          "column": 5,
          "position": 972
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": ";\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof DeviceSet",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java",
        "start": 149,
        "end": 163,
        "startLoc": {
          "line": 149,
          "column": 15,
          "position": 1242
        },
        "endLoc": {
          "line": 163,
          "column": 10,
          "position": 1355
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ")object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert.jmbde.datamodel.DeviceSet[ id=\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSet.java",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 10,
          "position": 1382
        },
        "endLoc": {
          "line": 176,
          "column": 46,
          "position": 1486
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 48,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The DepartmentSet Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 179
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": "implements Serializable {\r\n\r\n  private static final long serialVersionUID = 1L;\r\n  @Id @Basic(optional = false) @Column(name = \"Id\") private Integer id;\r\n  @Basic(optional = false) @Column(name = \"Name\") private String name;\r\n  @Column(name = \"Priority\") private Short priority;\r\n  @Column(name = \"LastUpdate\")\r\n  @Temporal(TemporalType.TIMESTAMP)\r\n  private Date lastUpdate;\r\n  @OneToMany(mappedBy = \"departmentId\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java",
        "start": 69,
        "end": 78,
        "startLoc": {
          "line": 69,
          "column": 2,
          "position": 330
        },
        "endLoc": {
          "line": 78,
          "column": 15,
          "position": 467
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 70,
        "end": 79,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 335
        },
        "endLoc": {
          "line": 79,
          "column": 17,
          "position": 472
        }
      }
    },
    {
      "format": "java",
      "lines": 33,
      "fragment": "lic DepartmentSet(Integer id) { this.id = id; }\r\n\r\n  public DepartmentSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public Short getPriority() { return priority; }\r\n\r\n  public void setPriority(Short priority) { this.priority = priority; }\r\n\r\n  public Date getLastUpdate() { return lastUpdate; }\r\n\r\n  public void setLastUpdate(Date lastUpdate) { this.lastUpdate = lastUpdate; }\r\n\r\n  @XmlTransient\r\n  public Collection<AddressSetEmployee> getAddressSetEmployeeCollection() {\r\n    return addressSetEmployeeCollection;\r\n  }\r\n\r\n  public void setAddressSetEmployeeCollection(\r\n      Collection<AddressSetEmployee> addressSetEmployeeCollection) {\r\n    this.addressSetEmployeeColl",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java",
        "start": 91,
        "end": 123,
        "startLoc": {
          "line": 91,
          "column": 14,
          "position": 585
        },
        "endLoc": {
          "line": 123,
          "column": 30,
          "position": 896
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 124,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 124,
          "column": 25,
          "position": 928
        }
      }
    },
    {
      "format": "java",
      "lines": 45,
      "fragment": "etEmployee> addressSetEmployeeCollection) {\r\n    this.addressSetEmployeeCollection = addressSetEmployeeCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetPrinter> getDeviceSetPrinterCollection() {\r\n    return deviceSetPrinterCollection;\r\n  }\r\n\r\n  public void setDeviceSetPrinterCollection(\r\n      Collection<DeviceSetPrinter> deviceSetPrinterCollection) {\r\n    this.deviceSetPrinterCollection = deviceSetPrinterCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetComputer> getDeviceSetComputerCollection() {\r\n    return deviceSetComputerCollection;\r\n  }\r\n\r\n  public void setDeviceSetComputerCollection(\r\n      Collection<DeviceSetComputer> deviceSetComputerCollection) {\r\n    this.deviceSetComputerCollection = deviceSetComputerCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetPhone> getDeviceSetPhoneCollection() {\r\n    return deviceSetPhoneCollection;\r\n  }\r\n\r\n  public void setDeviceSetPhoneCollection(\r\n      Collection<DeviceSetPhone> deviceSetPhoneCollection) {\r\n    this.deviceSetPhoneCollection = deviceSetPhoneCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java",
        "start": 119,
        "end": 163,
        "startLoc": {
          "line": 119,
          "column": 29,
          "position": 878
        },
        "endLoc": {
          "line": 163,
          "column": 14,
          "position": 1183
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 101,
        "end": 128,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 705
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof DepartmentSet)) {\r\n      return false;\r\n    }\r\n    DepartmentSet other = (DepartmentSet)object;\r\n    if ((this.id == null && other.id != null) ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DepartmentSet.java",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 14,
          "position": 1210
        },
        "endLoc": {
          "line": 176,
          "column": 50,
          "position": 1314
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 10,
      "fragment": ";\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java",
        "start": 28,
        "end": 37,
        "startLoc": {
          "line": 28,
          "column": 12,
          "position": 56
        },
        "endLoc": {
          "line": 37,
          "column": 10,
          "position": 145
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DoorSet.java",
        "start": 28,
        "end": 37,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 56
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 145
        }
      }
    },
    {
      "format": "java",
      "lines": 14,
      "fragment": "d) { this.id = id; }\r\n\r\n  public ChipCardSet(Integer id, String name) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String na",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java",
        "start": 93,
        "end": 106,
        "startLoc": {
          "line": 93,
          "column": 12,
          "position": 614
        },
        "endLoc": {
          "line": 106,
          "column": 14,
          "position": 755
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 530
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 671
        }
      }
    },
    {
      "format": "java",
      "lines": 25,
      "fragment": "ion(Collection<DoorSet> doorSetCollection) {\r\n    this.doorSetCollection = doorSetCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<AddressSetEmployee> getAddressSetEmployeeCollection() {\r\n    return addressSetEmployeeCollection;\r\n  }\r\n\r\n  public void setAddressSetEmployeeCollection(\r\n      Collection<AddressSetEmployee> addressSetEmployeeCollection) {\r\n    this.addressSetEmployeeCollection = addressSetEmployeeCollection;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java",
        "start": 122,
        "end": 146,
        "startLoc": {
          "line": 122,
          "column": 18,
          "position": 870
        },
        "endLoc": {
          "line": 146,
          "column": 12,
          "position": 1047
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 105,
        "end": 128,
        "startLoc": {
          "line": 105,
          "column": 11,
          "position": 761
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "s are not\r\n    // set\r\n    if (!(object instanceof ChipCardSet)) {\r\n      return false;\r\n    }\r\n    ChipCardSet other = (ChipCardSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java",
        "start": 149,
        "end": 159,
        "startLoc": {
          "line": 149,
          "column": 12,
          "position": 1074
        },
        "endLoc": {
          "line": 159,
          "column": 48,
          "position": 1178
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 48,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The AddressSetManufacturer Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see AddressSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 169
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetProgram.java",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 169
        }
      }
    },
    {
      "format": "java",
      "lines": 33,
      "fragment": "; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetPrinter> getDeviceSetPrinterCollection() {\r\n    return deviceSetPrinterCollection;\r\n  }\r\n\r\n  public void setDeviceSetPrinterCollection(\r\n      Collection<DeviceSetPrinter> deviceSetPrinterCollection) {\r\n    this.deviceSetPrinterCollection = deviceSetPrinterCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetComputer> getDeviceSetComputerCollection() {\r\n    return deviceSetComputerCollection;\r\n  }\r\n\r\n  public void setDeviceSetComputerCollection(\r\n      Collection<DeviceSetComputer> deviceSetComputerCollection) {\r\n    this.deviceSetComputerCollection = deviceSetComputerCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetPhone> getDeviceSetPhoneCollection() {\r\n    return deviceSetPhoneCollection;\r\n  }\r\n\r\n  public void setDeviceSe",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 137,
        "end": 169,
        "startLoc": {
          "line": 137,
          "column": 3,
          "position": 1135
        },
        "endLoc": {
          "line": 169,
          "column": 7,
          "position": 1335
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 101,
        "end": 133,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 705
        },
        "endLoc": {
          "line": 133,
          "column": 10,
          "position": 905
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": "n;\r\n  }\r\n\r\n  public AddressSet getAddressSet() { return addressSet; }\r\n\r\n  public void setAddressSet(AddressSet addressSet) {\r\n    this.addressSet = addressSet;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Ob",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 172,
        "end": 186,
        "startLoc": {
          "line": 172,
          "column": 11,
          "position": 1378
        },
        "endLoc": {
          "line": 186,
          "column": 23,
          "position": 1491
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "not\r\n    // set\r\n    if (!(object instanceof AddressSetManufacturer)) {\r\n      return false;\r\n    }\r\n    AddressSetManufacturer other = (AddressSetManufacturer)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 189,
        "end": 199,
        "startLoc": {
          "line": 189,
          "column": 23,
          "position": 1518
        },
        "endLoc": {
          "line": 199,
          "column": 59,
          "position": 1622
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 33,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.CascadeType;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 105
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ProcessorSet.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 13,
          "position": 105
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": ";\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.persistence",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 34,
        "end": 42,
        "startLoc": {
          "line": 34,
          "column": 4,
          "position": 116
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 193
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceSetComputer.java",
        "start": 32,
        "end": 40,
        "startLoc": {
          "line": 32,
          "column": 10,
          "position": 96
        },
        "endLoc": {
          "line": 40,
          "column": 4,
          "position": 173
        }
      }
    },
    {
      "format": "java",
      "lines": 23,
      "fragment": "mber;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  @XmlTransient\r\n  public Collection<DoorSchemaSet> getDoorSchemaSetCollection() {\r\n    return doorSchemaSetCollection;\r\n  }\r\n\r\n  public void setDoorSchemaSetCollection(\r\n      Collection<DoorSchemaSet> doorSchemaSetCollection) {\r\n    this.doorSchemaSetCollection = doorSchemaSetCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DoorSet> getDoorSetCollection() {\r\n    return doorSetCollection;\r\n  }\r\n\r\n  public void setDoorSetCollection(Collectio",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 226,
        "end": 248,
        "startLoc": {
          "line": 226,
          "column": 3,
          "position": 2058
        },
        "endLoc": {
          "line": 248,
          "column": 26,
          "position": 2199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/ChipCardSet.java",
        "start": 104,
        "end": 126,
        "startLoc": {
          "line": 104,
          "column": 5,
          "position": 747
        },
        "endLoc": {
          "line": 126,
          "column": 32,
          "position": 888
        }
      }
    },
    {
      "format": "java",
      "lines": 34,
      "fragment": "ublic WorkfunctionSet getWorkfunctionId() { return workfunctionId; }\r\n\r\n  public void setWorkfunctionId(WorkfunctionSet workfunctionId) {\r\n    this.workfunctionId = workfunctionId;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetPrinter> getDeviceSetPrinterCollection() {\r\n    return deviceSetPrinterCollection;\r\n  }\r\n\r\n  public void setDeviceSetPrinterCollection(\r\n      Collection<DeviceSetPrinter> deviceSetPrinterCollection) {\r\n    this.deviceSetPrinterCollection = deviceSetPrinterCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<DeviceSetComputer> getDeviceSetComputerCollection() {\r\n    return deviceSetComputerCollection;\r\n  }\r\n\r\n  public void setDeviceSetComputerCollection(\r\n      Collection<DeviceSetComputer> deviceSetComputerCollection) {\r\n    this.deviceSetComputerCollection = deviceSetComputerCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 288,
        "end": 321,
        "startLoc": {
          "line": 288,
          "column": 15,
          "position": 2558
        },
        "endLoc": {
          "line": 321,
          "column": 14,
          "position": 2760
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DeviceTypeSet.java",
        "start": 101,
        "end": 133,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 705
        },
        "endLoc": {
          "line": 133,
          "column": 10,
          "position": 905
        }
      }
    },
    {
      "format": "java",
      "lines": 25,
      "fragment": "ent\r\n  public Collection<DeviceSetPhone> getDeviceSetPhoneCollection() {\r\n    return deviceSetPhoneCollection;\r\n  }\r\n\r\n  public void setDeviceSetPhoneCollection(\r\n      Collection<DeviceSetPhone> deviceSetPhoneCollection) {\r\n    this.deviceSetPhoneCollection = deviceSetPhoneCollection;\r\n  }\r\n\r\n  @XmlTransient\r\n  public Collection<AccountSet> getAccountSetCollection() {\r\n    return accountSetCollection;\r\n  }\r\n\r\n  public void\r\n  setAccountSetCollection(Collection<AccountSet> accountSetCollection) {\r\n    this.accountSetCollection = accountSetCollection;\r\n  }\r\n\r\n  @Override\r\n  p",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 318,
        "end": 342,
        "startLoc": {
          "line": 318,
          "column": 25,
          "position": 2750
        },
        "endLoc": {
          "line": 342,
          "column": 19,
          "position": 2926
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 105,
        "end": 128,
        "startLoc": {
          "line": 105,
          "column": 11,
          "position": 755
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": " 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof AddressSetEmployee)) {\r\n      return false;\r\n    }\r\n    AddressSetEmploye",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 345,
        "end": 355,
        "startLoc": {
          "line": 345,
          "column": 19,
          "position": 2953
        },
        "endLoc": {
          "line": 355,
          "column": 55,
          "position": 3057
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 33,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\n\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.NamedQueries",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 13,
          "position": 105
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 10,
          "position": 105
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": ";\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.persistence",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 5,
          "position": 46
        },
        "endLoc": {
          "line": 38,
          "column": 12,
          "position": 153
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSetOperationSystem.java",
        "start": 26,
        "end": 37,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 36
        },
        "endLoc": {
          "line": 37,
          "column": 4,
          "position": 143
        }
      }
    },
    {
      "format": "java",
      "lines": 20,
      "fragment": ";\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToMany;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The AddressSetComany Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n * @see AddressSet\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 32,
        "end": 51,
        "startLoc": {
          "line": 32,
          "column": 11,
          "position": 96
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 199
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetEmployee.java",
        "start": 36,
        "end": 55,
        "startLoc": {
          "line": 36,
          "column": 10,
          "position": 136
        },
        "endLoc": {
          "line": 55,
          "column": 4,
          "position": 239
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": "    this.name = name;\r\n  }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public String getName2() { return name2; }\r\n\r\n  public void setName2(String name2) { this.name2 = name2",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 94,
        "end": 105,
        "startLoc": {
          "line": 94,
          "column": 5,
          "position": 635
        },
        "endLoc": {
          "line": 105,
          "column": 5,
          "position": 745
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 112,
        "end": 123,
        "startLoc": {
          "line": 112,
          "column": 11,
          "position": 839
        },
        "endLoc": {
          "line": 123,
          "column": 7,
          "position": 949
        }
      }
    },
    {
      "format": "java",
      "lines": 21,
      "fragment": ".addressSetEmployeeCollection = addressSetEmployeeCollection;\r\n  }\r\n\r\n  public AddressSet getAddressSet() { return addressSet; }\r\n\r\n  public void setAddressSet(AddressSet addressSet) {\r\n    this.addressSet = addressSet;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are no",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 120,
        "end": 140,
        "startLoc": {
          "line": 120,
          "column": 29,
          "position": 895
        },
        "endLoc": {
          "line": 140,
          "column": 18,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetManufacturer.java",
        "start": 166,
        "end": 128,
        "startLoc": {
          "line": 166,
          "column": 25,
          "position": 1325
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "se;\r\n    }\r\n    AddressSetCompany other = (AddressSetCompany)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSetCompany.java",
        "start": 143,
        "end": 153,
        "startLoc": {
          "line": 143,
          "column": 18,
          "position": 1088
        },
        "endLoc": {
          "line": 153,
          "column": 54,
          "position": 1192
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ";\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.CascadeType;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.OneToOne;\r\nimport javax.persistence.Table;\r\nimport javax.xml",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSet.java",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 13,
          "position": 26
        },
        "endLoc": {
          "line": 35,
          "column": 4,
          "position": 123
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SoftwareSet.java",
        "start": 26,
        "end": 36,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 36
        },
        "endLoc": {
          "line": 36,
          "column": 12,
          "position": 133
        }
      }
    },
    {
      "format": "java",
      "lines": 15,
      "fragment": ";\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    // set\r\n    if (!(object instanceof AddressSet",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSet.java",
        "start": 145,
        "end": 159,
        "startLoc": {
          "line": 145,
          "column": 18,
          "position": 1226
        },
        "endLoc": {
          "line": 159,
          "column": 11,
          "position": 1339
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 29,
          "position": 823
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": ")object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"de.jmuelbert.jmbde.datamodel.AddressSet[ id=\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AddressSet.java",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 11,
          "position": 1366
        },
        "endLoc": {
          "line": 172,
          "column": 47,
          "position": 1470
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "java",
      "lines": 37,
      "fragment": "/**\r\n * JMBDE - Datamodel\r\n *\r\n *\r\n * Created by Jürgen Mülbert on 07.12.2015\r\n * Copyright (c) 2015 Jürgen Mülbert. All rights reserved.\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the European Union Public Licence (EUPL),\r\n * version 1.1.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * European Union Public Licence for more details.\r\n *\r\n * You should have received a copy of the European Union Public Licence\r\n * along with this program. If not, see\r\n * https://tldrlegal.com/license/european-union-public-licence\r\n *\r\n */\r\npackage de.jmuelbert.jmbde.datamodel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Collection;\r\nimport java.util.Date;\r\nimport javax.persistence.Basic;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 1,
        "end": 37,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 153
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 1,
        "end": 37,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 37,
          "column": 10,
          "position": 145
        }
      }
    },
    {
      "format": "java",
      "lines": 9,
      "fragment": ";\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 33,
        "end": 41,
        "startLoc": {
          "line": 33,
          "column": 11,
          "position": 114
        },
        "endLoc": {
          "line": 41,
          "column": 7,
          "position": 191
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/InventorySet.java",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 86
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 165
        }
      }
    },
    {
      "format": "java",
      "lines": 17,
      "fragment": ";\r\nimport javax.persistence.NamedQueries;\r\nimport javax.persistence.NamedQuery;\r\nimport javax.persistence.Table;\r\nimport javax.persistence.Temporal;\r\nimport javax.persistence.TemporalType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport javax.xml.bind.annotation.XmlTransient;\r\n\r\n/**\r\n * The Account Entity\r\n *\r\n *\r\n * @author Jürgen Mülbert\r\n * @version 0.4\r\n *\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 34,
        "end": 50,
        "startLoc": {
          "line": 34,
          "column": 10,
          "position": 124
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 207
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/SystemDataSet.java",
        "start": 32,
        "end": 49,
        "startLoc": {
          "line": 32,
          "column": 11,
          "position": 96
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 179
        }
      }
    },
    {
      "format": "java",
      "lines": 12,
      "fragment": "Name = userName;\r\n  }\r\n\r\n  public Integer getId() { return id; }\r\n\r\n  public void setId(Integer id) { this.id = id; }\r\n\r\n  public String getName() { return name; }\r\n\r\n  public void setName(String name) { this.name = name; }\r\n\r\n  public Str",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 102,
        "end": 113,
        "startLoc": {
          "line": 102,
          "column": 9,
          "position": 753
        },
        "endLoc": {
          "line": 113,
          "column": 12,
          "position": 865
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 88,
        "end": 106,
        "startLoc": {
          "line": 88,
          "column": 5,
          "position": 563
        },
        "endLoc": {
          "line": 106,
          "column": 11,
          "position": 774
        }
      }
    },
    {
      "format": "java",
      "lines": 21,
      "fragment": "emDataSetCollection = systemDataSetCollection;\r\n  }\r\n\r\n  public AddressSetEmployee getEmployeeId() { return employeeId; }\r\n\r\n  public void setEmployeeId(AddressSetEmployee employeeId) {\r\n    this.employeeId = employeeId;\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    int hash = 0;\r\n    hash += (id != null ? id.hashCode() : 0);\r\n    return hash;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object object) {\r\n    // TODO: Warning - this method won't work in the case the id fields are not\r\n    /",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 132,
        "end": 152,
        "startLoc": {
          "line": 132,
          "column": 24,
          "position": 1062
        },
        "endLoc": {
          "line": 152,
          "column": 11,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/DocumentsSet.java",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 12,
          "position": 876
        },
        "endLoc": {
          "line": 128,
          "column": 16,
          "position": 936
        }
      }
    },
    {
      "format": "java",
      "lines": 11,
      "fragment": "e;\r\n    }\r\n    AccountSet other = (AccountSet)object;\r\n    if ((this.id == null && other.id != null) ||\r\n        (this.id != null && !this.id.equals(other.id))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    return \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/AccountSet.java",
        "start": 155,
        "end": 165,
        "startLoc": {
          "line": 155,
          "column": 11,
          "position": 1255
        },
        "endLoc": {
          "line": 165,
          "column": 47,
          "position": 1359
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/de/jmuelbert/jmbde/datamodel/WorkfunctionSet.java",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 16,
          "position": 963
        },
        "endLoc": {
          "line": 141,
          "column": 52,
          "position": 1067
        }
      }
    },
    {
      "format": "markup",
      "lines": 28,
      "fragment": "\" transaction-type=\"RESOURCE_LOCAL\">\n    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>\n    <class>de.jmuelbert.jmbde.datamodel.AccountSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetCompany</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetEmployee</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetManufacturer</class>\n    <class>de.jmuelbert.jmbde.datamodel.DepartmentSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetComputer</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetPhone</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetPrinter</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceTypeSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DocumentsSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DoorSchemaSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DoorSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.InventorySet</class>\n    <class>de.jmuelbert.jmbde.datamodel.PlaceSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.ProcessorSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSetOperationSystem</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSetProgram</class>\n    <class>de.jmuelbert.jmbde.datamodel.SystemDataSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.WorkfunctionSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.ChipCardSet</class>\n    <shared-cache-mode>ALL</shared-cache-mode>\n    <properties>\n      <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:mysql://localhost:3306/jmbde?zeroDateTimeBehavior=convertToNull",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/META-INF/persistence.xml",
        "start": 38,
        "end": 65,
        "startLoc": {
          "line": 38,
          "column": 15,
          "position": 399
        },
        "endLoc": {
          "line": 65,
          "column": 69,
          "position": 651
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/META-INF/persistence.xml",
        "start": 3,
        "end": 30,
        "startLoc": {
          "line": 3,
          "column": 15,
          "position": 40
        },
        "endLoc": {
          "line": 30,
          "column": 34,
          "position": 292
        }
      }
    },
    {
      "format": "markup",
      "lines": 28,
      "fragment": "\" transaction-type=\"RESOURCE_LOCAL\">\n    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>\n    <class>de.jmuelbert.jmbde.datamodel.AccountSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetCompany</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetEmployee</class>\n    <class>de.jmuelbert.jmbde.datamodel.AddressSetManufacturer</class>\n    <class>de.jmuelbert.jmbde.datamodel.DepartmentSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetComputer</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetPhone</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceSetPrinter</class>\n    <class>de.jmuelbert.jmbde.datamodel.DeviceTypeSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DocumentsSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DoorSchemaSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.DoorSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.InventorySet</class>\n    <class>de.jmuelbert.jmbde.datamodel.PlaceSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.ProcessorSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSetOperationSystem</class>\n    <class>de.jmuelbert.jmbde.datamodel.SoftwareSetProgram</class>\n    <class>de.jmuelbert.jmbde.datamodel.SystemDataSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.WorkfunctionSet</class>\n    <class>de.jmuelbert.jmbde.datamodel.ChipCardSet</class>\n    <shared-cache-mode>ALL</shared-cache-mode>\n    <properties>\n      <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:sqlserver://localhost:1433;DatabaseName=JMBDE",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/src/META-INF/persistence.xml",
        "start": 73,
        "end": 100,
        "startLoc": {
          "line": 73,
          "column": 15,
          "position": 758
        },
        "endLoc": {
          "line": 100,
          "column": 51,
          "position": 1010
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-datamodel/src/META-INF/persistence.xml",
        "start": 3,
        "end": 30,
        "startLoc": {
          "line": 3,
          "column": 15,
          "position": 40
        },
        "endLoc": {
          "line": 30,
          "column": 34,
          "position": 292
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/mysql-client/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 27,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/derbyclient/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 22,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/Options/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 32,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 17,
      "fragment": "</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>javax.persistence</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.netbeans.modules.settings",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/nbproject/project.xml",
        "start": 10,
        "end": 26,
        "startLoc": {
          "line": 10,
          "column": 29,
          "position": 66
        },
        "endLoc": {
          "line": 26,
          "column": 30,
          "position": 161
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/nbproject/project.xml",
        "start": 18,
        "end": 34,
        "startLoc": {
          "line": 18,
          "column": 22,
          "position": 114
        },
        "endLoc": {
          "line": 34,
          "column": 17,
          "position": 209
        }
      }
    },
    {
      "format": "markup",
      "lines": 28,
      "fragment": "</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>9.5.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util.lookup</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>8.32.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util.ui</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>9.4.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/nbproject/project.xml",
        "start": 63,
        "end": 90,
        "startLoc": {
          "line": 63,
          "column": 7,
          "position": 387
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 546
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/Options/nbproject/project.xml",
        "start": 41,
        "end": 68,
        "startLoc": {
          "line": 41,
          "column": 7,
          "position": 261
        },
        "endLoc": {
          "line": 68,
          "column": 3,
          "position": 420
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 40,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 14,
      "fragment": "</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>de.jmuelbert.jmbde.employee.viewer</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <release-version>0</release-version>\n                        <specification-version>0.5</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>javax.persistence",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/nbproject/project.xml",
        "start": 14,
        "end": 27,
        "startLoc": {
          "line": 14,
          "column": 4,
          "position": 90
        },
        "endLoc": {
          "line": 27,
          "column": 18,
          "position": 170
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/Options/nbproject/project.xml",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 99
        },
        "endLoc": {
          "line": 28,
          "column": 33,
          "position": 179
        }
      }
    },
    {
      "format": "markup",
      "lines": 46,
      "fragment": "</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>javax.persistence</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.netbeans.modules.settings</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <release-version>1</release-version>\n                        <specification-version>1.48.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.awt</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>7.65.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.dialogs</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>7.41.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.explorer</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>6.61.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.filesystems.nb",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/nbproject/project.xml",
        "start": 23,
        "end": 68,
        "startLoc": {
          "line": 23,
          "column": 4,
          "position": 147
        },
        "endLoc": {
          "line": 68,
          "column": 27,
          "position": 419
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/nbproject/project.xml",
        "start": 14,
        "end": 59,
        "startLoc": {
          "line": 14,
          "column": 4,
          "position": 90
        },
        "endLoc": {
          "line": 59,
          "column": 18,
          "position": 362
        }
      }
    },
    {
      "format": "markup",
      "lines": 49,
      "fragment": "</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.nodes</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>7.42.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>9.5.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util.lookup</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>8.32.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.util.ui</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>9.4.1</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.openide.windows</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>6.74.1</specification-version>\n                    </run-dependency>\n                </dependency>\n            </module-dependencies>\n            <test-dependencies>\n                <test-type>\n                    <name>unit</name>\n                    <test-dependency>\n                        <code-name-base>org.netbeans.libs.junit4",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/nbproject/project.xml",
        "start": 72,
        "end": 120,
        "startLoc": {
          "line": 72,
          "column": 6,
          "position": 444
        },
        "endLoc": {
          "line": 120,
          "column": 25,
          "position": 731
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/nbproject/project.xml",
        "start": 55,
        "end": 103,
        "startLoc": {
          "line": 55,
          "column": 7,
          "position": 339
        },
        "endLoc": {
          "line": 103,
          "column": 29,
          "position": 626
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 40,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 21,
      "fragment": "</code-name-base>\n            <suite-component/>\n            <module-dependencies>\n                <dependency>\n                    <code-name-base>com.microsoft.jdbc.sqlserver</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>com.mysql.jdbc.Driver</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.apache.derby",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/project.xml",
        "start": 6,
        "end": 26,
        "startLoc": {
          "line": 6,
          "column": 18,
          "position": 42
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 161
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/nbproject/project.xml",
        "start": 6,
        "end": 26,
        "startLoc": {
          "line": 6,
          "column": 29,
          "position": 42
        },
        "endLoc": {
          "line": 26,
          "column": 18,
          "position": 161
        }
      }
    },
    {
      "format": "markup",
      "lines": 18,
      "fragment": "</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n                <dependency>\n                    <code-name-base>org.apache.derby</code-name-base>\n                    <build-prerequisite/>\n                    <compile-dependency/>\n                    <run-dependency>\n                        <specification-version>1.0</specification-version>\n                    </run-dependency>\n                </dependency>\n            </module-dependencies>\n            <public-packages>\n                <package>commonj.sdo.impl",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/project.xml",
        "start": 18,
        "end": 35,
        "startLoc": {
          "line": 18,
          "column": 22,
          "position": 114
        },
        "endLoc": {
          "line": 35,
          "column": 17,
          "position": 214
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/nbproject/project.xml",
        "start": 26,
        "end": 43,
        "startLoc": {
          "line": 26,
          "column": 18,
          "position": 162
        },
        "endLoc": {
          "line": 43,
          "column": 29,
          "position": 262
        }
      }
    },
    {
      "format": "markup",
      "lines": 40,
      "fragment": "\" basedir=\"..\">\n    <fail message=\"Please build using Ant 1.7.1 or higher.\">\n        <condition>\n            <not>\n                <antversion atleast=\"1.7.1\"/>\n            </not>\n        </condition>\n    </fail>\n    <property file=\"nbproject/private/suite-private.properties\"/>\n    <property file=\"nbproject/suite.properties\"/>\n    <fail unless=\"suite.dir\">You must set 'suite.dir' to point to your containing module suite</fail>\n    <property file=\"${suite.dir}/nbproject/private/platform-private.properties\"/>\n    <property file=\"${suite.dir}/nbproject/platform.properties\"/>\n    <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-project/2\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <nbmproject2:property name=\"harness.dir\" value=\"nbplatform.${nbplatform.active}.harness.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:property name=\"nbplatform.active.dir\" value=\"nbplatform.${nbplatform.active}.netbeans.dest.dir\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <nbmproject2:evalprops property=\"cluster.path.evaluated\" value=\"${cluster.path}\" xmlns:nbmproject2=\"http://www.netbeans.org/ns/nb-module-project/2\"/>\n    <fail message=\"Path to 'platform' cluster missing in $${cluster.path} property or using corrupt Netbeans Platform (missing harness).\">\n        <condition>\n            <not>\n                <contains string=\"${cluster.path.evaluated}\" substring=\"platform\"/>\n            </not>\n        </condition>\n    </fail>\n    <import file=\"${harness.dir}/build.xml\"/>\n</project>",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/Eclipse-Persistence-Services/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 23,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 6,
        "end": 45,
        "startLoc": {
          "line": 6,
          "column": 34,
          "position": 11
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 444
        }
      }
    },
    {
      "format": "markup",
      "lines": 8,
      "fragment": "\">\n        <attribute name=\"name\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{name}\" value=\"${@{value}}\"/>\n        </sequential>\n    </macrodef>\n    <macrodef name=\"evalprops\" uri=\"http://www.netbeans.org/ns/nb-module-suite-project/1",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/nbproject/build-impl.xml",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 53,
          "position": 110
        },
        "endLoc": {
          "line": 23,
          "column": 53,
          "position": 180
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 47,
          "position": 160
        },
        "endLoc": {
          "line": 26,
          "column": 47,
          "position": 230
        }
      }
    },
    {
      "format": "markup",
      "lines": 9,
      "fragment": "\">\n        <attribute name=\"property\"/>\n        <attribute name=\"value\"/>\n        <sequential>\n            <property name=\"@{property}\" value=\"@{value}\"/>\n        </sequential>\n    </macrodef>\n    <property file=\"${user.properties.file}\"/>\n    <sproject:",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/nbproject/build-impl.xml",
        "start": 23,
        "end": 31,
        "startLoc": {
          "line": 23,
          "column": 53,
          "position": 181
        },
        "endLoc": {
          "line": 31,
          "column": 10,
          "position": 251
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/sqljdbc/nbproject/build-impl.xml",
        "start": 26,
        "end": 34,
        "startLoc": {
          "line": 26,
          "column": 47,
          "position": 231
        },
        "endLoc": {
          "line": 34,
          "column": 13,
          "position": 301
        }
      }
    },
    {
      "format": "markdown",
      "lines": 144,
      "fragment": "Full License Text\nEuropean Union Public Licence\n\nV. 1.1\n\nEUPL (c) the European Community 2007\n\nThis European Union Public Licence (the \"EUPL\") applies to the Work or Software (as defined below) which is provided under the terms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such use is covered by a right of the copyright holder of the Work).\n\nThe Original Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following notice immediately following the copyright notice for the Original Work:\nLicensed under the EUPL V.1.1 or has expressed by any other mean his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- The Licence: this Licence.\n\n- The Original Work or the Software: the software distributed and/or communicated by the Licensor under this Licence, available as Source Code and also as Executable Code as the case may be.\n\n- Derivative Works: the works or software that could be created by the Licensee, based upon the Original Work or modifications thereof. This Licence does not define the extent of modification or dependence on the Original Work required in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in the country mentioned in Article 15.\n\n- The Work: the Original Work and/or its Derivative Works.\n\n- The Source Code: the human-readable form of the Work which is the most convenient for people to study and modify.\n\n- The Executable Code: any code which has generally been compiled and which is meant to be interpreted by a computer as a program.\n\n- The Licensor: the natural or legal person that distributes and/or communicates the Work under the Licence.\n\n- Contributor(s): any natural or legal person who modifies the Work under the Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- The Licensee or \"You\": any natural or legal person who makes any usage of the Software under the terms of the Licence.\n\n- Distribution and/or Communication: any act of selling, giving, lending, renting, distributing, communicating, transmitting, or otherwise making available, on-line or off-line, copies of the Work or providing access to its essential functionalities at the disposal of any other natural or legal person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a world-wide, royalty-free, non-exclusive, sublicensable licence to do the following, for the duration of copyright vested in the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Original Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display the Work or copies thereof to the public and perform publicly, as the case may be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sub-license rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed by law in order to make effective the licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non exclusive usage rights to any patents held by the Licensor, to the extent necessary to make use of the rights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to distribute and/or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the exclusive rights of the rights owners in the Original Work or Software, of the exhaustion of those rights or of other applicable limitations thereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: the Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to the Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the Licence with every copy of the Work he/she distributes and/or communicates. The Licensee must cause any Derivative Work to carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes and/or communicates copies of the Original Works or Derivative Works based upon the Original Work, this Distribution and/or Communication will be done under the terms of this Licence or of a later version of this Licence unless the Original Work is expressly distributed only under this version of the Licence. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes and/or Communicates Derivative Works or copies thereof based upon both the Original Work and another work licensed under a Compatible Licence, this Distribution and/or Communication can be done under the terms of this Compatible Licence. For the sake of this clause,\n\"Compatible Licence\" refers to the licences listed in the appendix attached to this Licence. Should the Licensee’s obligations under the Compatible Licence conflict with his/her obligations under this Licence, the obligations of the Compatible Licence shall prevail.\n\nProvision of Source Code: When distributing and/or communicating copies of the\nWork, the Licensee will provide a machine-readable copy of the Source Code or\nindicate a repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute and/or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions to the Work, under the terms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous contributors. It is not a finished work and may therefore contain defects or \"bugs\" inherent to this type of software development.\n\nFor the above reason, the Work is provided under the Licence on an \"as is\" basis and without warranties of any kind concerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be liable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However, the Licensor will be liable under statutory product liability laws as far such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Original Work or Derivative Works, You may choose to conclude an additional agreement to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or services consistent with this Licence. However, in accepting such obligations, You may act only on your own behalf and on your sole responsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by the fact You have accepted any such warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon \"I agree\" placed under the bottom of a window displaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You by Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution and/or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution and/or Communication of the Work by means of electronic communication by You (for example, by offering to download the Work from a remote location) the distribution channel or media (for example, a website) must at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence and the way it may be accessible, concluded, stored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms of the Licence. Such a termination will not terminate the licences of any person who has received the Work from the Licensee under the Licence, provided such persons remain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the Work licensed hereunder.\n\nIf any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or enforceability of the Licence as a whole. Such provision will be construed and/or reformed so as necessary to make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions and/or new versions of this Licence, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence. New versions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take advantage of the linguistic version of their choice.\n\n14. Jurisdiction\n\nAny litigation resulting from the interpretation of this License, arising between the European Commission, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice of the European Communities, as laid down in article 238 of the Treaty establishing the European Community.\n\nAny litigation arising between Parties, other than the European Commission, and resulting from the interpretation of this License, will be subject to the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business.\n\n15. Applicable Law\n\nThis Licence shall be governed by the law of the European Union country where the Licensor resides or has his registered office.\n\nThis licence shall be governed by the Belgian law if:\n\n- a litigation arises between the European Commission, as a Licensor, and any\nLicensee;\n- the Licensor, other than the European Commission, has no residence or\nregistered office inside a European Union country.",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeViewer/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      }
    },
    {
      "format": "markdown",
      "lines": 144,
      "fragment": "Full License Text\nEuropean Union Public Licence\n\nV. 1.1\n\nEUPL (c) the European Community 2007\n\nThis European Union Public Licence (the \"EUPL\") applies to the Work or Software (as defined below) which is provided under the terms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such use is covered by a right of the copyright holder of the Work).\n\nThe Original Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following notice immediately following the copyright notice for the Original Work:\nLicensed under the EUPL V.1.1 or has expressed by any other mean his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- The Licence: this Licence.\n\n- The Original Work or the Software: the software distributed and/or communicated by the Licensor under this Licence, available as Source Code and also as Executable Code as the case may be.\n\n- Derivative Works: the works or software that could be created by the Licensee, based upon the Original Work or modifications thereof. This Licence does not define the extent of modification or dependence on the Original Work required in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in the country mentioned in Article 15.\n\n- The Work: the Original Work and/or its Derivative Works.\n\n- The Source Code: the human-readable form of the Work which is the most convenient for people to study and modify.\n\n- The Executable Code: any code which has generally been compiled and which is meant to be interpreted by a computer as a program.\n\n- The Licensor: the natural or legal person that distributes and/or communicates the Work under the Licence.\n\n- Contributor(s): any natural or legal person who modifies the Work under the Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- The Licensee or \"You\": any natural or legal person who makes any usage of the Software under the terms of the Licence.\n\n- Distribution and/or Communication: any act of selling, giving, lending, renting, distributing, communicating, transmitting, or otherwise making available, on-line or off-line, copies of the Work or providing access to its essential functionalities at the disposal of any other natural or legal person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a world-wide, royalty-free, non-exclusive, sublicensable licence to do the following, for the duration of copyright vested in the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Original Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display the Work or copies thereof to the public and perform publicly, as the case may be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sub-license rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed by law in order to make effective the licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non exclusive usage rights to any patents held by the Licensor, to the extent necessary to make use of the rights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to distribute and/or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the exclusive rights of the rights owners in the Original Work or Software, of the exhaustion of those rights or of other applicable limitations thereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: the Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to the Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the Licence with every copy of the Work he/she distributes and/or communicates. The Licensee must cause any Derivative Work to carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes and/or communicates copies of the Original Works or Derivative Works based upon the Original Work, this Distribution and/or Communication will be done under the terms of this Licence or of a later version of this Licence unless the Original Work is expressly distributed only under this version of the Licence. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes and/or Communicates Derivative Works or copies thereof based upon both the Original Work and another work licensed under a Compatible Licence, this Distribution and/or Communication can be done under the terms of this Compatible Licence. For the sake of this clause,\n\"Compatible Licence\" refers to the licences listed in the appendix attached to this Licence. Should the Licensee’s obligations under the Compatible Licence conflict with his/her obligations under this Licence, the obligations of the Compatible Licence shall prevail.\n\nProvision of Source Code: When distributing and/or communicating copies of the\nWork, the Licensee will provide a machine-readable copy of the Source Code or\nindicate a repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute and/or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions to the Work, under the terms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous contributors. It is not a finished work and may therefore contain defects or \"bugs\" inherent to this type of software development.\n\nFor the above reason, the Work is provided under the Licence on an \"as is\" basis and without warranties of any kind concerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be liable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However, the Licensor will be liable under statutory product liability laws as far such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Original Work or Derivative Works, You may choose to conclude an additional agreement to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or services consistent with this Licence. However, in accepting such obligations, You may act only on your own behalf and on your sole responsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by the fact You have accepted any such warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon \"I agree\" placed under the bottom of a window displaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You by Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution and/or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution and/or Communication of the Work by means of electronic communication by You (for example, by offering to download the Work from a remote location) the distribution channel or media (for example, a website) must at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence and the way it may be accessible, concluded, stored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms of the Licence. Such a termination will not terminate the licences of any person who has received the Work from the Licensee under the Licence, provided such persons remain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the Work licensed hereunder.\n\nIf any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or enforceability of the Licence as a whole. Such provision will be construed and/or reformed so as necessary to make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions and/or new versions of this Licence, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence. New versions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take advantage of the linguistic version of their choice.\n\n14. Jurisdiction\n\nAny litigation resulting from the interpretation of this License, arising between the European Commission, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice of the European Communities, as laid down in article 238 of the Treaty establishing the European Community.\n\nAny litigation arising between Parties, other than the European Commission, and resulting from the interpretation of this License, will be subject to the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business.\n\n15. Applicable Law\n\nThis Licence shall be governed by the law of the European Union country where the Licensor resides or has his registered office.\n\nThis licence shall be governed by the Belgian law if:\n\n- a litigation arises between the European Commission, as a Licensor, and any\nLicensee;\n- the Licensor, other than the European Commission, has no residence or\nregistered office inside a European Union country.",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/EmployeeEditor/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      }
    },
    {
      "format": "markdown",
      "lines": 144,
      "fragment": "Full License Text\nEuropean Union Public Licence\n\nV. 1.1\n\nEUPL (c) the European Community 2007\n\nThis European Union Public Licence (the \"EUPL\") applies to the Work or Software (as defined below) which is provided under the terms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such use is covered by a right of the copyright holder of the Work).\n\nThe Original Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following notice immediately following the copyright notice for the Original Work:\nLicensed under the EUPL V.1.1 or has expressed by any other mean his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- The Licence: this Licence.\n\n- The Original Work or the Software: the software distributed and/or communicated by the Licensor under this Licence, available as Source Code and also as Executable Code as the case may be.\n\n- Derivative Works: the works or software that could be created by the Licensee, based upon the Original Work or modifications thereof. This Licence does not define the extent of modification or dependence on the Original Work required in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in the country mentioned in Article 15.\n\n- The Work: the Original Work and/or its Derivative Works.\n\n- The Source Code: the human-readable form of the Work which is the most convenient for people to study and modify.\n\n- The Executable Code: any code which has generally been compiled and which is meant to be interpreted by a computer as a program.\n\n- The Licensor: the natural or legal person that distributes and/or communicates the Work under the Licence.\n\n- Contributor(s): any natural or legal person who modifies the Work under the Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- The Licensee or \"You\": any natural or legal person who makes any usage of the Software under the terms of the Licence.\n\n- Distribution and/or Communication: any act of selling, giving, lending, renting, distributing, communicating, transmitting, or otherwise making available, on-line or off-line, copies of the Work or providing access to its essential functionalities at the disposal of any other natural or legal person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a world-wide, royalty-free, non-exclusive, sublicensable licence to do the following, for the duration of copyright vested in the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Original Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display the Work or copies thereof to the public and perform publicly, as the case may be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sub-license rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed by law in order to make effective the licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non exclusive usage rights to any patents held by the Licensor, to the extent necessary to make use of the rights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to distribute and/or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the exclusive rights of the rights owners in the Original Work or Software, of the exhaustion of those rights or of other applicable limitations thereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: the Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to the Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the Licence with every copy of the Work he/she distributes and/or communicates. The Licensee must cause any Derivative Work to carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes and/or communicates copies of the Original Works or Derivative Works based upon the Original Work, this Distribution and/or Communication will be done under the terms of this Licence or of a later version of this Licence unless the Original Work is expressly distributed only under this version of the Licence. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes and/or Communicates Derivative Works or copies thereof based upon both the Original Work and another work licensed under a Compatible Licence, this Distribution and/or Communication can be done under the terms of this Compatible Licence. For the sake of this clause,\n\"Compatible Licence\" refers to the licences listed in the appendix attached to this Licence. Should the Licensee’s obligations under the Compatible Licence conflict with his/her obligations under this Licence, the obligations of the Compatible Licence shall prevail.\n\nProvision of Source Code: When distributing and/or communicating copies of the\nWork, the Licensee will provide a machine-readable copy of the Source Code or\nindicate a repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute and/or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions to the Work, under the terms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous contributors. It is not a finished work and may therefore contain defects or \"bugs\" inherent to this type of software development.\n\nFor the above reason, the Work is provided under the Licence on an \"as is\" basis and without warranties of any kind concerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be liable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However, the Licensor will be liable under statutory product liability laws as far such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Original Work or Derivative Works, You may choose to conclude an additional agreement to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or services consistent with this Licence. However, in accepting such obligations, You may act only on your own behalf and on your sole responsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by the fact You have accepted any such warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon \"I agree\" placed under the bottom of a window displaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You by Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution and/or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution and/or Communication of the Work by means of electronic communication by You (for example, by offering to download the Work from a remote location) the distribution channel or media (for example, a website) must at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence and the way it may be accessible, concluded, stored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms of the Licence. Such a termination will not terminate the licences of any person who has received the Work from the Licensee under the Licence, provided such persons remain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the Work licensed hereunder.\n\nIf any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or enforceability of the Licence as a whole. Such provision will be construed and/or reformed so as necessary to make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions and/or new versions of this Licence, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence. New versions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take advantage of the linguistic version of their choice.\n\n14. Jurisdiction\n\nAny litigation resulting from the interpretation of this License, arising between the European Commission, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice of the European Communities, as laid down in article 238 of the Treaty establishing the European Community.\n\nAny litigation arising between Parties, other than the European Commission, and resulting from the interpretation of this License, will be subject to the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business.\n\n15. Applicable Law\n\nThis Licence shall be governed by the law of the European Union country where the Licensor resides or has his registered office.\n\nThis licence shall be governed by the Belgian law if:\n\n- a litigation arises between the European Commission, as a Licensor, and any\nLicensee;\n- the Licensor, other than the European Commission, has no residence or\nregistered office inside a European Union country.",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-datamodel/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      }
    },
    {
      "format": "markup",
      "lines": 18,
      "fragment": "</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>3.4.2</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surfire-plugin",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 211,
        "end": 228,
        "startLoc": {
          "line": 211,
          "column": 7,
          "position": 1483
        },
        "endLoc": {
          "line": 228,
          "column": 21,
          "position": 1603
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 148,
        "end": 167,
        "startLoc": {
          "line": 148,
          "column": 6,
          "position": 1040
        },
        "endLoc": {
          "line": 167,
          "column": 22,
          "position": 1162
        }
      }
    },
    {
      "format": "markup",
      "lines": 14,
      "fragment": "</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>3.0.0-M7</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.2.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 229,
        "end": 242,
        "startLoc": {
          "line": 229,
          "column": 5,
          "position": 1613
        },
        "endLoc": {
          "line": 242,
          "column": 25,
          "position": 1705
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 168,
        "end": 181,
        "startLoc": {
          "line": 168,
          "column": 9,
          "position": 1172
        },
        "endLoc": {
          "line": 181,
          "column": 18,
          "position": 1264
        }
      }
    },
    {
      "format": "markup",
      "lines": 19,
      "fragment": ">\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>clirr-maven-plugin</artifactId>\n                <version>2.8</version>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>jdepend-maven-plugin</artifactId>\n                <version>2.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>3.3.0</version>\n            </plugin>\n        </plugins>\n    </build",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 271,
        "end": 289,
        "startLoc": {
          "line": 271,
          "column": 14,
          "position": 1905
        },
        "endLoc": {
          "line": 289,
          "column": 6,
          "position": 2030
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 178,
        "end": 196,
        "startLoc": {
          "line": 178,
          "column": 8,
          "position": 1248
        },
        "endLoc": {
          "line": 196,
          "column": 17,
          "position": 1373
        }
      }
    },
    {
      "format": "markdown",
      "lines": 144,
      "fragment": "Full License Text\nEuropean Union Public Licence\n\nV. 1.1\n\nEUPL (c) the European Community 2007\n\nThis European Union Public Licence (the \"EUPL\") applies to the Work or Software (as defined below) which is provided under the terms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such use is covered by a right of the copyright holder of the Work).\n\nThe Original Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following notice immediately following the copyright notice for the Original Work:\nLicensed under the EUPL V.1.1 or has expressed by any other mean his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- The Licence: this Licence.\n\n- The Original Work or the Software: the software distributed and/or communicated by the Licensor under this Licence, available as Source Code and also as Executable Code as the case may be.\n\n- Derivative Works: the works or software that could be created by the Licensee, based upon the Original Work or modifications thereof. This Licence does not define the extent of modification or dependence on the Original Work required in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in the country mentioned in Article 15.\n\n- The Work: the Original Work and/or its Derivative Works.\n\n- The Source Code: the human-readable form of the Work which is the most convenient for people to study and modify.\n\n- The Executable Code: any code which has generally been compiled and which is meant to be interpreted by a computer as a program.\n\n- The Licensor: the natural or legal person that distributes and/or communicates the Work under the Licence.\n\n- Contributor(s): any natural or legal person who modifies the Work under the Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- The Licensee or \"You\": any natural or legal person who makes any usage of the Software under the terms of the Licence.\n\n- Distribution and/or Communication: any act of selling, giving, lending, renting, distributing, communicating, transmitting, or otherwise making available, on-line or off-line, copies of the Work or providing access to its essential functionalities at the disposal of any other natural or legal person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a world-wide, royalty-free, non-exclusive, sublicensable licence to do the following, for the duration of copyright vested in the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Original Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display the Work or copies thereof to the public and perform publicly, as the case may be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sub-license rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed by law in order to make effective the licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non exclusive usage rights to any patents held by the Licensor, to the extent necessary to make use of the rights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to distribute and/or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the exclusive rights of the rights owners in the Original Work or Software, of the exhaustion of those rights or of other applicable limitations thereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: the Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to the Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the Licence with every copy of the Work he/she distributes and/or communicates. The Licensee must cause any Derivative Work to carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes and/or communicates copies of the Original Works or Derivative Works based upon the Original Work, this Distribution and/or Communication will be done under the terms of this Licence or of a later version of this Licence unless the Original Work is expressly distributed only under this version of the Licence. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes and/or Communicates Derivative Works or copies thereof based upon both the Original Work and another work licensed under a Compatible Licence, this Distribution and/or Communication can be done under the terms of this Compatible Licence. For the sake of this clause,\n\"Compatible Licence\" refers to the licences listed in the appendix attached to this Licence. Should the Licensee’s obligations under the Compatible Licence conflict with his/her obligations under this Licence, the obligations of the Compatible Licence shall prevail.\n\nProvision of Source Code: When distributing and/or communicating copies of the\nWork, the Licensee will provide a machine-readable copy of the Source Code or\nindicate a repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute and/or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or licensed to him/her and that he/she has the power and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions to the Work, under the terms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous contributors. It is not a finished work and may therefore contain defects or \"bugs\" inherent to this type of software development.\n\nFor the above reason, the Work is provided under the Licence on an \"as is\" basis and without warranties of any kind concerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be liable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However, the Licensor will be liable under statutory product liability laws as far such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Original Work or Derivative Works, You may choose to conclude an additional agreement to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or services consistent with this Licence. However, in accepting such obligations, You may act only on your own behalf and on your sole responsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by the fact You have accepted any such warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon \"I agree\" placed under the bottom of a window displaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You by Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution and/or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution and/or Communication of the Work by means of electronic communication by You (for example, by offering to download the Work from a remote location) the distribution channel or media (for example, a website) must at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence and the way it may be accessible, concluded, stored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms of the Licence. Such a termination will not terminate the licences of any person who has received the Work from the Licensee under the Licence, provided such persons remain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the Work licensed hereunder.\n\nIf any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or enforceability of the Licence as a whole. Such provision will be construed and/or reformed so as necessary to make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions and/or new versions of this Licence, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence. New versions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take advantage of the linguistic version of their choice.\n\n14. Jurisdiction\n\nAny litigation resulting from the interpretation of this License, arising between the European Commission, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice of the European Communities, as laid down in article 238 of the Treaty establishing the European Community.\n\nAny litigation arising between Parties, other than the European Commission, and resulting from the interpretation of this License, will be subject to the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business.\n\n15. Applicable Law\n\nThis Licence shall be governed by the law of the European Union country where the Licensor resides or has his registered office.\n\nThis licence shall be governed by the Belgian law if:\n\n- a litigation arises between the European Commission, as a Licensor, and any\nLicensee;\n- the Licensor, other than the European Commission, has no residence or\nregistered office inside a European Union country.",
      "tokens": 0,
      "firstFile": {
        "name": "src/main/jmbde-app/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/jmbde-datamodel/license.txt",
        "start": 1,
        "end": 144,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 144,
          "column": 9,
          "position": 4242
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "): E extends ValidContentEntrySlug<C>\n\t\t? Promise<CollectionEntry<C>>\n\t\t: Promise<CollectionEntry<C> | undefined>;\n\texport function getEntry<\n\t\tC extends keyof DataEntryMap,\n\t\tE extends keyof DataEntryMap[C] | (string & {}),\n\t>(\n\t\tcollection",
      "tokens": 0,
      "firstFile": {
        "name": "docs/.astro/astro/content.d.ts",
        "start": 95,
        "end": 102,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 956
        },
        "endLoc": {
          "line": 102,
          "column": 11,
          "position": 1041
        }
      },
      "secondFile": {
        "name": "docs/.astro/astro/content.d.ts",
        "start": 77,
        "end": 83,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 749
        },
        "endLoc": {
          "line": 83,
          "column": 6,
          "position": 832
        }
      }
    },
    {
      "format": "markdown",
      "lines": 7,
      "fragment": "END OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/GPL-2.0-or-later.txt",
        "start": 91,
        "end": 97,
        "startLoc": {
          "line": 91,
          "column": 1,
          "position": 4400
        },
        "endLoc": {
          "line": 97,
          "column": 7,
          "position": 4565
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 203,
        "end": 209,
        "startLoc": {
          "line": 203,
          "column": 1,
          "position": 9190
        },
        "endLoc": {
          "line": 209,
          "column": 6,
          "position": 9355
        }
      }
    },
    {
      "format": "markdown",
      "lines": 6,
      "fragment": "in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\").",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/CC0-1.0.txt",
        "start": 78,
        "end": 83,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 1359
        },
        "endLoc": {
          "line": 83,
          "column": 12,
          "position": 1461
        }
      },
      "secondFile": {
        "name": "LICENSES/CC0-1.0.txt",
        "start": 61,
        "end": 65,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 972
        },
        "endLoc": {
          "line": 65,
          "column": 11,
          "position": 1074
        }
      }
    },
    {
      "format": "markdown",
      "lines": 28,
      "fragment": "for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same work.\n\n2. Basic Permissions.\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\n\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.\n\n4. Conveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\n5. Conveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified it, and giving a relevant date.",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 53,
        "end": 80,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 1937
        },
        "endLoc": {
          "line": 80,
          "column": 103,
          "position": 3220
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 57,
        "end": 83,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 2209
        },
        "endLoc": {
          "line": 83,
          "column": 104,
          "position": 3492
        }
      }
    },
    {
      "format": "markdown",
      "lines": 6,
      "fragment": "if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\n6. Conveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 88,
        "end": 93,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 3336
        },
        "endLoc": {
          "line": 93,
          "column": 231,
          "position": 3520
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 91,
        "end": 96,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 3608
        },
        "endLoc": {
          "line": 96,
          "column": 232,
          "position": 3792
        }
      }
    },
    {
      "format": "markdown",
      "lines": 10,
      "fragment": "for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\n\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\n\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\n7. Additional Terms.\n\"Additional",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 107,
        "end": 116,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 3873
        },
        "endLoc": {
          "line": 116,
          "column": 12,
          "position": 4475
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 110,
        "end": 119,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 4145
        },
        "endLoc": {
          "line": 119,
          "column": 12,
          "position": 4747
        }
      }
    },
    {
      "format": "markdown",
      "lines": 7,
      "fragment": "are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 116,
        "end": 122,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 4479
        },
        "endLoc": {
          "line": 122,
          "column": 119,
          "position": 4854
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 119,
        "end": 125,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 4751
        },
        "endLoc": {
          "line": 125,
          "column": 120,
          "position": 5126
        }
      }
    },
    {
      "format": "markdown",
      "lines": 25,
      "fragment": "within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\n8. Termination.\n\nYou may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\n\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\n\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\n9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\n10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.\n\nAn \"entity",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 134,
        "end": 158,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 4890
        },
        "endLoc": {
          "line": 158,
          "column": 8,
          "position": 5932
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 137,
        "end": 158,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 5162
        },
        "endLoc": {
          "line": 158,
          "column": 8,
          "position": 6201
        }
      }
    },
    {
      "format": "markdown",
      "lines": 7,
      "fragment": "is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\n11. Patents.\n\nA \"contributor\"",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 158,
        "end": 164,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 5936
        },
        "endLoc": {
          "line": 164,
          "column": 14,
          "position": 6285
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 158,
        "end": 163,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 6205
        },
        "endLoc": {
          "line": 163,
          "column": 14,
          "position": 6553
        }
      }
    },
    {
      "format": "markdown",
      "lines": 10,
      "fragment": "if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\n12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\n13. Remote",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 177,
        "end": 186,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 7173
        },
        "endLoc": {
          "line": 186,
          "column": 7,
          "position": 7787
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 175,
        "end": 182,
        "startLoc": {
          "line": 175,
          "column": 2,
          "position": 7441
        },
        "endLoc": {
          "line": 182,
          "column": 4,
          "position": 8054
        }
      }
    },
    {
      "format": "markdown",
      "lines": 7,
      "fragment": "General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\n\nLater license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\n15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 198,
        "end": 204,
        "startLoc": {
          "line": 198,
          "column": 2,
          "position": 8467
        },
        "endLoc": {
          "line": 204,
          "column": 4,
          "position": 8652
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-3.0-or-later.txt",
        "start": 190,
        "end": 195,
        "startLoc": {
          "line": 190,
          "column": 2,
          "position": 8535
        },
        "endLoc": {
          "line": 195,
          "column": 4,
          "position": 8719
        }
      }
    },
    {
      "format": "markdown",
      "lines": 13,
      "fragment": "THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs",
      "tokens": 0,
      "firstFile": {
        "name": "LICENSES/AGPL-3.0-or-later.txt",
        "start": 204,
        "end": 216,
        "startLoc": {
          "line": 204,
          "column": 1,
          "position": 8594
        },
        "endLoc": {
          "line": 216,
          "column": 58,
          "position": 9136
        }
      },
      "secondFile": {
        "name": "LICENSES/GPL-2.0-or-later.txt",
        "start": 87,
        "end": 205,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 4012
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 9201
        }
      }
    },
    {
      "format": "markup",
      "lines": 15,
      "fragment": ">\n\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/jmuelbert/jmbde-java/issues</url>\n    </issueManagement>\n\n    <scm>\n        <connection>scm:git:https://github.com/jmuelbert/jmbde-java.git</connection>\n        <developerConnection>scm:git:git@github.com:jmuelbert/jmbde-java.git</developerConnection>\n        <url>${project.url}</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <dependencies",
      "tokens": 0,
      "firstFile": {
        "name": "pom.xml",
        "start": 48,
        "end": 62,
        "startLoc": {
          "line": 48,
          "column": 11,
          "position": 341
        },
        "endLoc": {
          "line": 62,
          "column": 13,
          "position": 422
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 67,
        "end": 82,
        "startLoc": {
          "line": 67,
          "column": 13,
          "position": 501
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 583
        }
      }
    },
    {
      "format": "markup",
      "lines": 14,
      "fragment": ">\n\n    <dependencies>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-controls</artifactId>\n            <version>${javafx.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-fxml</artifactId>\n            <version>${javafx.version}</version>\n        </dependency>\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "pom.xml",
        "start": 60,
        "end": 73,
        "startLoc": {
          "line": 60,
          "column": 4,
          "position": 417
        },
        "endLoc": {
          "line": 73,
          "column": 3,
          "position": 500
        }
      },
      "secondFile": {
        "name": "src/main/jmbde-app/pom.xml",
        "start": 48,
        "end": 61,
        "startLoc": {
          "line": 48,
          "column": 11,
          "position": 370
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 453
        }
      }
    }
  ],
  "filename": "/node-deps/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}